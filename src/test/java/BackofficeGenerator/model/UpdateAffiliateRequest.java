/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.net.URI;
import java.util.*;

/**
 * UpdateAffiliateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class UpdateAffiliateRequest {
  public static final String SERIALIZED_NAME_AFFILIATE_NAME = "AffiliateName";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_NAME)
  private String affiliateName;

  public static final String SERIALIZED_NAME_BRAND_ID = "BrandId";
  @SerializedName(SERIALIZED_NAME_BRAND_ID)
  private Integer brandId;

  public static final String SERIALIZED_NAME_PRINT_IMG_URL = "PrintImgUrl";
  @SerializedName(SERIALIZED_NAME_PRINT_IMG_URL)
  private URI printImgUrl;

  public static final String SERIALIZED_NAME_PRINT_SLIP_HEADER = "PrintSlipHeader";
  @SerializedName(SERIALIZED_NAME_PRINT_SLIP_HEADER)
  private String printSlipHeader;

  public static final String SERIALIZED_NAME_PRINT_SLIP_FOOTER = "PrintSlipFooter";
  @SerializedName(SERIALIZED_NAME_PRINT_SLIP_FOOTER)
  private String printSlipFooter;

  public static final String SERIALIZED_NAME_PLATFORM_QR_CODE_URL = "PlatformQrCodeUrl";
  @SerializedName(SERIALIZED_NAME_PLATFORM_QR_CODE_URL)
  private URI platformQrCodeUrl;

  public static final String SERIALIZED_NAME_PLAYER_LIMIT_GROUP_ID = "PlayerLimitGroupId";
  @SerializedName(SERIALIZED_NAME_PLAYER_LIMIT_GROUP_ID)
  private Integer playerLimitGroupId;

  public static final String SERIALIZED_NAME_AFFILIATE_ID = "AffiliateId";
  @SerializedName(SERIALIZED_NAME_AFFILIATE_ID)
  private Integer affiliateId;

  public UpdateAffiliateRequest() {
  }

  public UpdateAffiliateRequest affiliateName(String affiliateName) {
    this.affiliateName = affiliateName;
    return this;
  }

   /**
   * Get affiliateName
   * @return affiliateName
  **/
  @javax.annotation.Nullable
  public String getAffiliateName() {
    return affiliateName;
  }

  public void setAffiliateName(String affiliateName) {
    this.affiliateName = affiliateName;
  }


  public UpdateAffiliateRequest brandId(Integer brandId) {
    this.brandId = brandId;
    return this;
  }

   /**
   * Get brandId
   * @return brandId
  **/
  @javax.annotation.Nullable
  public Integer getBrandId() {
    return brandId;
  }

  public void setBrandId(Integer brandId) {
    this.brandId = brandId;
  }


  public UpdateAffiliateRequest printImgUrl(URI printImgUrl) {
    this.printImgUrl = printImgUrl;
    return this;
  }

   /**
   * Get printImgUrl
   * @return printImgUrl
  **/
  @javax.annotation.Nullable
  public URI getPrintImgUrl() {
    return printImgUrl;
  }

  public void setPrintImgUrl(URI printImgUrl) {
    this.printImgUrl = printImgUrl;
  }


  public UpdateAffiliateRequest printSlipHeader(String printSlipHeader) {
    this.printSlipHeader = printSlipHeader;
    return this;
  }

   /**
   * Get printSlipHeader
   * @return printSlipHeader
  **/
  @javax.annotation.Nullable
  public String getPrintSlipHeader() {
    return printSlipHeader;
  }

  public void setPrintSlipHeader(String printSlipHeader) {
    this.printSlipHeader = printSlipHeader;
  }


  public UpdateAffiliateRequest printSlipFooter(String printSlipFooter) {
    this.printSlipFooter = printSlipFooter;
    return this;
  }

   /**
   * Get printSlipFooter
   * @return printSlipFooter
  **/
  @javax.annotation.Nullable
  public String getPrintSlipFooter() {
    return printSlipFooter;
  }

  public void setPrintSlipFooter(String printSlipFooter) {
    this.printSlipFooter = printSlipFooter;
  }


  public UpdateAffiliateRequest platformQrCodeUrl(URI platformQrCodeUrl) {
    this.platformQrCodeUrl = platformQrCodeUrl;
    return this;
  }

   /**
   * Get platformQrCodeUrl
   * @return platformQrCodeUrl
  **/
  @javax.annotation.Nullable
  public URI getPlatformQrCodeUrl() {
    return platformQrCodeUrl;
  }

  public void setPlatformQrCodeUrl(URI platformQrCodeUrl) {
    this.platformQrCodeUrl = platformQrCodeUrl;
  }


  public UpdateAffiliateRequest playerLimitGroupId(Integer playerLimitGroupId) {
    this.playerLimitGroupId = playerLimitGroupId;
    return this;
  }

   /**
   * Get playerLimitGroupId
   * @return playerLimitGroupId
  **/
  @javax.annotation.Nullable
  public Integer getPlayerLimitGroupId() {
    return playerLimitGroupId;
  }

  public void setPlayerLimitGroupId(Integer playerLimitGroupId) {
    this.playerLimitGroupId = playerLimitGroupId;
  }


  public UpdateAffiliateRequest affiliateId(Integer affiliateId) {
    this.affiliateId = affiliateId;
    return this;
  }

   /**
   * Get affiliateId
   * @return affiliateId
  **/
  @javax.annotation.Nullable
  public Integer getAffiliateId() {
    return affiliateId;
  }

  public void setAffiliateId(Integer affiliateId) {
    this.affiliateId = affiliateId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateAffiliateRequest updateAffiliateRequest = (UpdateAffiliateRequest) o;
    return Objects.equals(this.affiliateName, updateAffiliateRequest.affiliateName) &&
        Objects.equals(this.brandId, updateAffiliateRequest.brandId) &&
        Objects.equals(this.printImgUrl, updateAffiliateRequest.printImgUrl) &&
        Objects.equals(this.printSlipHeader, updateAffiliateRequest.printSlipHeader) &&
        Objects.equals(this.printSlipFooter, updateAffiliateRequest.printSlipFooter) &&
        Objects.equals(this.platformQrCodeUrl, updateAffiliateRequest.platformQrCodeUrl) &&
        Objects.equals(this.playerLimitGroupId, updateAffiliateRequest.playerLimitGroupId) &&
        Objects.equals(this.affiliateId, updateAffiliateRequest.affiliateId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(affiliateName, brandId, printImgUrl, printSlipHeader, printSlipFooter, platformQrCodeUrl, playerLimitGroupId, affiliateId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateAffiliateRequest {\n");
    sb.append("    affiliateName: ").append(toIndentedString(affiliateName)).append("\n");
    sb.append("    brandId: ").append(toIndentedString(brandId)).append("\n");
    sb.append("    printImgUrl: ").append(toIndentedString(printImgUrl)).append("\n");
    sb.append("    printSlipHeader: ").append(toIndentedString(printSlipHeader)).append("\n");
    sb.append("    printSlipFooter: ").append(toIndentedString(printSlipFooter)).append("\n");
    sb.append("    platformQrCodeUrl: ").append(toIndentedString(platformQrCodeUrl)).append("\n");
    sb.append("    playerLimitGroupId: ").append(toIndentedString(playerLimitGroupId)).append("\n");
    sb.append("    affiliateId: ").append(toIndentedString(affiliateId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AffiliateName");
    openapiFields.add("BrandId");
    openapiFields.add("PrintImgUrl");
    openapiFields.add("PrintSlipHeader");
    openapiFields.add("PrintSlipFooter");
    openapiFields.add("PlatformQrCodeUrl");
    openapiFields.add("PlayerLimitGroupId");
    openapiFields.add("AffiliateId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UpdateAffiliateRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateAffiliateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateAffiliateRequest is not found in the empty JSON string", UpdateAffiliateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateAffiliateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateAffiliateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AffiliateName") != null && !jsonObj.get("AffiliateName").isJsonNull()) && !jsonObj.get("AffiliateName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AffiliateName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AffiliateName").toString()));
      }
      if ((jsonObj.get("PrintImgUrl") != null && !jsonObj.get("PrintImgUrl").isJsonNull()) && !jsonObj.get("PrintImgUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrintImgUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrintImgUrl").toString()));
      }
      if ((jsonObj.get("PrintSlipHeader") != null && !jsonObj.get("PrintSlipHeader").isJsonNull()) && !jsonObj.get("PrintSlipHeader").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrintSlipHeader` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrintSlipHeader").toString()));
      }
      if ((jsonObj.get("PrintSlipFooter") != null && !jsonObj.get("PrintSlipFooter").isJsonNull()) && !jsonObj.get("PrintSlipFooter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PrintSlipFooter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PrintSlipFooter").toString()));
      }
      if ((jsonObj.get("PlatformQrCodeUrl") != null && !jsonObj.get("PlatformQrCodeUrl").isJsonNull()) && !jsonObj.get("PlatformQrCodeUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PlatformQrCodeUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PlatformQrCodeUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateAffiliateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateAffiliateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateAffiliateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateAffiliateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateAffiliateRequest>() {
           @Override
           public void write(JsonWriter out, UpdateAffiliateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateAffiliateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateAffiliateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateAffiliateRequest
  * @throws IOException if the JSON string is invalid with respect to UpdateAffiliateRequest
  */
  public static UpdateAffiliateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateAffiliateRequest.class);
  }

 /**
  * Convert an instance of UpdateAffiliateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

