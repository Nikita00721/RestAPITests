/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.util.*;

/**
 * StatisticsGroupDataItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class StatisticsGroupDataItem {
  public static final String SERIALIZED_NAME_GROUP_TYPE = "GroupType";
  @SerializedName(SERIALIZED_NAME_GROUP_TYPE)
  private StatisticsGroupType groupType;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_BETS = "Bets";
  @SerializedName(SERIALIZED_NAME_BETS)
  private Integer bets;

  public static final String SERIALIZED_NAME_AVG_STAKE = "AvgStake";
  @SerializedName(SERIALIZED_NAME_AVG_STAKE)
  private Double avgStake;

  public static final String SERIALIZED_NAME_AVG_STAKE_BASE = "AvgStakeBase";
  @SerializedName(SERIALIZED_NAME_AVG_STAKE_BASE)
  private Double avgStakeBase;

  public static final String SERIALIZED_NAME_AVG_ODDS = "AvgOdds";
  @SerializedName(SERIALIZED_NAME_AVG_ODDS)
  private Double avgOdds;

  public static final String SERIALIZED_NAME_MARGIN = "Margin";
  @SerializedName(SERIALIZED_NAME_MARGIN)
  private Double margin;

  public static final String SERIALIZED_NAME_MARGIN_BASE = "MarginBase";
  @SerializedName(SERIALIZED_NAME_MARGIN_BASE)
  private Double marginBase;

  public static final String SERIALIZED_NAME_TURNOVER = "Turnover";
  @SerializedName(SERIALIZED_NAME_TURNOVER)
  private Double turnover;

  public static final String SERIALIZED_NAME_TURNOVER_BASE = "TurnoverBase";
  @SerializedName(SERIALIZED_NAME_TURNOVER_BASE)
  private Double turnoverBase;

  public static final String SERIALIZED_NAME_G_G_R = "GGR";
  @SerializedName(SERIALIZED_NAME_G_G_R)
  private Double GGR;

  public static final String SERIALIZED_NAME_GG_R_BASE = "GGRBase";
  @SerializedName(SERIALIZED_NAME_GG_R_BASE)
  private Double ggRBase;

  public static final String SERIALIZED_NAME_SPORT_TYPE_ID = "SportTypeId";
  @SerializedName(SERIALIZED_NAME_SPORT_TYPE_ID)
  private Integer sportTypeId;

  public static final String SERIALIZED_NAME_SPORT_NAME = "SportName";
  @SerializedName(SERIALIZED_NAME_SPORT_NAME)
  private String sportName;

  public static final String SERIALIZED_NAME_GROUP_ID = "GroupId";
  @SerializedName(SERIALIZED_NAME_GROUP_ID)
  private Integer groupId;

  public StatisticsGroupDataItem() {
  }

  public StatisticsGroupDataItem groupType(StatisticsGroupType groupType) {
    this.groupType = groupType;
    return this;
  }

   /**
   * Get groupType
   * @return groupType
  **/
  @javax.annotation.Nullable
  public StatisticsGroupType getGroupType() {
    return groupType;
  }

  public void setGroupType(StatisticsGroupType groupType) {
    this.groupType = groupType;
  }


  public StatisticsGroupDataItem name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public StatisticsGroupDataItem bets(Integer bets) {
    this.bets = bets;
    return this;
  }

   /**
   * Get bets
   * @return bets
  **/
  @javax.annotation.Nullable
  public Integer getBets() {
    return bets;
  }

  public void setBets(Integer bets) {
    this.bets = bets;
  }


  public StatisticsGroupDataItem avgStake(Double avgStake) {
    this.avgStake = avgStake;
    return this;
  }

   /**
   * Get avgStake
   * @return avgStake
  **/
  @javax.annotation.Nullable
  public Double getAvgStake() {
    return avgStake;
  }

  public void setAvgStake(Double avgStake) {
    this.avgStake = avgStake;
  }


  public StatisticsGroupDataItem avgStakeBase(Double avgStakeBase) {
    this.avgStakeBase = avgStakeBase;
    return this;
  }

   /**
   * Get avgStakeBase
   * @return avgStakeBase
  **/
  @javax.annotation.Nullable
  public Double getAvgStakeBase() {
    return avgStakeBase;
  }

  public void setAvgStakeBase(Double avgStakeBase) {
    this.avgStakeBase = avgStakeBase;
  }


  public StatisticsGroupDataItem avgOdds(Double avgOdds) {
    this.avgOdds = avgOdds;
    return this;
  }

   /**
   * Get avgOdds
   * @return avgOdds
  **/
  @javax.annotation.Nullable
  public Double getAvgOdds() {
    return avgOdds;
  }

  public void setAvgOdds(Double avgOdds) {
    this.avgOdds = avgOdds;
  }


  public StatisticsGroupDataItem margin(Double margin) {
    this.margin = margin;
    return this;
  }

   /**
   * Get margin
   * @return margin
  **/
  @javax.annotation.Nullable
  public Double getMargin() {
    return margin;
  }

  public void setMargin(Double margin) {
    this.margin = margin;
  }


  public StatisticsGroupDataItem marginBase(Double marginBase) {
    this.marginBase = marginBase;
    return this;
  }

   /**
   * Get marginBase
   * @return marginBase
  **/
  @javax.annotation.Nullable
  public Double getMarginBase() {
    return marginBase;
  }

  public void setMarginBase(Double marginBase) {
    this.marginBase = marginBase;
  }


  public StatisticsGroupDataItem turnover(Double turnover) {
    this.turnover = turnover;
    return this;
  }

   /**
   * Get turnover
   * @return turnover
  **/
  @javax.annotation.Nullable
  public Double getTurnover() {
    return turnover;
  }

  public void setTurnover(Double turnover) {
    this.turnover = turnover;
  }


  public StatisticsGroupDataItem turnoverBase(Double turnoverBase) {
    this.turnoverBase = turnoverBase;
    return this;
  }

   /**
   * Get turnoverBase
   * @return turnoverBase
  **/
  @javax.annotation.Nullable
  public Double getTurnoverBase() {
    return turnoverBase;
  }

  public void setTurnoverBase(Double turnoverBase) {
    this.turnoverBase = turnoverBase;
  }


  public StatisticsGroupDataItem GGR(Double GGR) {
    this.GGR = GGR;
    return this;
  }

   /**
   * Get GGR
   * @return GGR
  **/
  @javax.annotation.Nullable
  public Double getGGR() {
    return GGR;
  }

  public void setGGR(Double GGR) {
    this.GGR = GGR;
  }


  public StatisticsGroupDataItem ggRBase(Double ggRBase) {
    this.ggRBase = ggRBase;
    return this;
  }

   /**
   * Get ggRBase
   * @return ggRBase
  **/
  @javax.annotation.Nullable
  public Double getGgRBase() {
    return ggRBase;
  }

  public void setGgRBase(Double ggRBase) {
    this.ggRBase = ggRBase;
  }


  public StatisticsGroupDataItem sportTypeId(Integer sportTypeId) {
    this.sportTypeId = sportTypeId;
    return this;
  }

   /**
   * Get sportTypeId
   * @return sportTypeId
  **/
  @javax.annotation.Nullable
  public Integer getSportTypeId() {
    return sportTypeId;
  }

  public void setSportTypeId(Integer sportTypeId) {
    this.sportTypeId = sportTypeId;
  }


  public StatisticsGroupDataItem sportName(String sportName) {
    this.sportName = sportName;
    return this;
  }

   /**
   * Get sportName
   * @return sportName
  **/
  @javax.annotation.Nullable
  public String getSportName() {
    return sportName;
  }

  public void setSportName(String sportName) {
    this.sportName = sportName;
  }


  public StatisticsGroupDataItem groupId(Integer groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @javax.annotation.Nullable
  public Integer getGroupId() {
    return groupId;
  }

  public void setGroupId(Integer groupId) {
    this.groupId = groupId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StatisticsGroupDataItem statisticsGroupDataItem = (StatisticsGroupDataItem) o;
    return Objects.equals(this.groupType, statisticsGroupDataItem.groupType) &&
        Objects.equals(this.name, statisticsGroupDataItem.name) &&
        Objects.equals(this.bets, statisticsGroupDataItem.bets) &&
        Objects.equals(this.avgStake, statisticsGroupDataItem.avgStake) &&
        Objects.equals(this.avgStakeBase, statisticsGroupDataItem.avgStakeBase) &&
        Objects.equals(this.avgOdds, statisticsGroupDataItem.avgOdds) &&
        Objects.equals(this.margin, statisticsGroupDataItem.margin) &&
        Objects.equals(this.marginBase, statisticsGroupDataItem.marginBase) &&
        Objects.equals(this.turnover, statisticsGroupDataItem.turnover) &&
        Objects.equals(this.turnoverBase, statisticsGroupDataItem.turnoverBase) &&
        Objects.equals(this.GGR, statisticsGroupDataItem.GGR) &&
        Objects.equals(this.ggRBase, statisticsGroupDataItem.ggRBase) &&
        Objects.equals(this.sportTypeId, statisticsGroupDataItem.sportTypeId) &&
        Objects.equals(this.sportName, statisticsGroupDataItem.sportName) &&
        Objects.equals(this.groupId, statisticsGroupDataItem.groupId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupType, name, bets, avgStake, avgStakeBase, avgOdds, margin, marginBase, turnover, turnoverBase, GGR, ggRBase, sportTypeId, sportName, groupId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StatisticsGroupDataItem {\n");
    sb.append("    groupType: ").append(toIndentedString(groupType)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    bets: ").append(toIndentedString(bets)).append("\n");
    sb.append("    avgStake: ").append(toIndentedString(avgStake)).append("\n");
    sb.append("    avgStakeBase: ").append(toIndentedString(avgStakeBase)).append("\n");
    sb.append("    avgOdds: ").append(toIndentedString(avgOdds)).append("\n");
    sb.append("    margin: ").append(toIndentedString(margin)).append("\n");
    sb.append("    marginBase: ").append(toIndentedString(marginBase)).append("\n");
    sb.append("    turnover: ").append(toIndentedString(turnover)).append("\n");
    sb.append("    turnoverBase: ").append(toIndentedString(turnoverBase)).append("\n");
    sb.append("    GGR: ").append(toIndentedString(GGR)).append("\n");
    sb.append("    ggRBase: ").append(toIndentedString(ggRBase)).append("\n");
    sb.append("    sportTypeId: ").append(toIndentedString(sportTypeId)).append("\n");
    sb.append("    sportName: ").append(toIndentedString(sportName)).append("\n");
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("GroupType");
    openapiFields.add("Name");
    openapiFields.add("Bets");
    openapiFields.add("AvgStake");
    openapiFields.add("AvgStakeBase");
    openapiFields.add("AvgOdds");
    openapiFields.add("Margin");
    openapiFields.add("MarginBase");
    openapiFields.add("Turnover");
    openapiFields.add("TurnoverBase");
    openapiFields.add("GGR");
    openapiFields.add("GGRBase");
    openapiFields.add("SportTypeId");
    openapiFields.add("SportName");
    openapiFields.add("GroupId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to StatisticsGroupDataItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StatisticsGroupDataItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StatisticsGroupDataItem is not found in the empty JSON string", StatisticsGroupDataItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StatisticsGroupDataItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StatisticsGroupDataItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `GroupType`
      if (jsonObj.get("GroupType") != null && !jsonObj.get("GroupType").isJsonNull()) {
        StatisticsGroupType.validateJsonElement(jsonObj.get("GroupType"));
      }
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("SportName") != null && !jsonObj.get("SportName").isJsonNull()) && !jsonObj.get("SportName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SportName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SportName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StatisticsGroupDataItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StatisticsGroupDataItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StatisticsGroupDataItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StatisticsGroupDataItem.class));

       return (TypeAdapter<T>) new TypeAdapter<StatisticsGroupDataItem>() {
           @Override
           public void write(JsonWriter out, StatisticsGroupDataItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StatisticsGroupDataItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of StatisticsGroupDataItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of StatisticsGroupDataItem
  * @throws IOException if the JSON string is invalid with respect to StatisticsGroupDataItem
  */
  public static StatisticsGroupDataItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StatisticsGroupDataItem.class);
  }

 /**
  * Convert an instance of StatisticsGroupDataItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

