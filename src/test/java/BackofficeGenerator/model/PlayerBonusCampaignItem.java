/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;

/**
 * PlayerBonusCampaignItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class PlayerBonusCampaignItem {
  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_TYPE = "Type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_END_DATE_TEXT = "EndDateText";
  @SerializedName(SERIALIZED_NAME_END_DATE_TEXT)
  private String endDateText;

  public static final String SERIALIZED_NAME_STATUS = "Status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_AMOUNT = "Amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Double amount;

  public static final String SERIALIZED_NAME_AMOUNT_WITH_CURRENCY = "AmountWithCurrency";
  @SerializedName(SERIALIZED_NAME_AMOUNT_WITH_CURRENCY)
  private String amountWithCurrency;

  public static final String SERIALIZED_NAME_BONUS_CAMPAIGN_ID = "BonusCampaignId";
  @SerializedName(SERIALIZED_NAME_BONUS_CAMPAIGN_ID)
  private Integer bonusCampaignId;

  public PlayerBonusCampaignItem() {
  }

  public PlayerBonusCampaignItem name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public PlayerBonusCampaignItem type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @javax.annotation.Nullable
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  public PlayerBonusCampaignItem startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public PlayerBonusCampaignItem endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public PlayerBonusCampaignItem endDateText(String endDateText) {
    this.endDateText = endDateText;
    return this;
  }

   /**
   * Get endDateText
   * @return endDateText
  **/
  @javax.annotation.Nullable
  public String getEndDateText() {
    return endDateText;
  }

  public void setEndDateText(String endDateText) {
    this.endDateText = endDateText;
  }


  public PlayerBonusCampaignItem status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public PlayerBonusCampaignItem amount(Double amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @javax.annotation.Nullable
  public Double getAmount() {
    return amount;
  }

  public void setAmount(Double amount) {
    this.amount = amount;
  }


  public PlayerBonusCampaignItem amountWithCurrency(String amountWithCurrency) {
    this.amountWithCurrency = amountWithCurrency;
    return this;
  }

   /**
   * Get amountWithCurrency
   * @return amountWithCurrency
  **/
  @javax.annotation.Nullable
  public String getAmountWithCurrency() {
    return amountWithCurrency;
  }

  public void setAmountWithCurrency(String amountWithCurrency) {
    this.amountWithCurrency = amountWithCurrency;
  }


  public PlayerBonusCampaignItem bonusCampaignId(Integer bonusCampaignId) {
    this.bonusCampaignId = bonusCampaignId;
    return this;
  }

   /**
   * Get bonusCampaignId
   * @return bonusCampaignId
  **/
  @javax.annotation.Nullable
  public Integer getBonusCampaignId() {
    return bonusCampaignId;
  }

  public void setBonusCampaignId(Integer bonusCampaignId) {
    this.bonusCampaignId = bonusCampaignId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlayerBonusCampaignItem playerBonusCampaignItem = (PlayerBonusCampaignItem) o;
    return Objects.equals(this.name, playerBonusCampaignItem.name) &&
        Objects.equals(this.type, playerBonusCampaignItem.type) &&
        Objects.equals(this.startDate, playerBonusCampaignItem.startDate) &&
        Objects.equals(this.endDate, playerBonusCampaignItem.endDate) &&
        Objects.equals(this.endDateText, playerBonusCampaignItem.endDateText) &&
        Objects.equals(this.status, playerBonusCampaignItem.status) &&
        Objects.equals(this.amount, playerBonusCampaignItem.amount) &&
        Objects.equals(this.amountWithCurrency, playerBonusCampaignItem.amountWithCurrency) &&
        Objects.equals(this.bonusCampaignId, playerBonusCampaignItem.bonusCampaignId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, startDate, endDate, endDateText, status, amount, amountWithCurrency, bonusCampaignId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlayerBonusCampaignItem {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    endDateText: ").append(toIndentedString(endDateText)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    amountWithCurrency: ").append(toIndentedString(amountWithCurrency)).append("\n");
    sb.append("    bonusCampaignId: ").append(toIndentedString(bonusCampaignId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Name");
    openapiFields.add("Type");
    openapiFields.add("StartDate");
    openapiFields.add("EndDate");
    openapiFields.add("EndDateText");
    openapiFields.add("Status");
    openapiFields.add("Amount");
    openapiFields.add("AmountWithCurrency");
    openapiFields.add("BonusCampaignId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to PlayerBonusCampaignItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PlayerBonusCampaignItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PlayerBonusCampaignItem is not found in the empty JSON string", PlayerBonusCampaignItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PlayerBonusCampaignItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PlayerBonusCampaignItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Name") != null && !jsonObj.get("Name").isJsonNull()) && !jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if ((jsonObj.get("Type") != null && !jsonObj.get("Type").isJsonNull()) && !jsonObj.get("Type").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Type` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Type").toString()));
      }
      if ((jsonObj.get("EndDateText") != null && !jsonObj.get("EndDateText").isJsonNull()) && !jsonObj.get("EndDateText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EndDateText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EndDateText").toString()));
      }
      if ((jsonObj.get("Status") != null && !jsonObj.get("Status").isJsonNull()) && !jsonObj.get("Status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Status").toString()));
      }
      if ((jsonObj.get("AmountWithCurrency") != null && !jsonObj.get("AmountWithCurrency").isJsonNull()) && !jsonObj.get("AmountWithCurrency").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AmountWithCurrency` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AmountWithCurrency").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PlayerBonusCampaignItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PlayerBonusCampaignItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PlayerBonusCampaignItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PlayerBonusCampaignItem.class));

       return (TypeAdapter<T>) new TypeAdapter<PlayerBonusCampaignItem>() {
           @Override
           public void write(JsonWriter out, PlayerBonusCampaignItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PlayerBonusCampaignItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PlayerBonusCampaignItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PlayerBonusCampaignItem
  * @throws IOException if the JSON string is invalid with respect to PlayerBonusCampaignItem
  */
  public static PlayerBonusCampaignItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PlayerBonusCampaignItem.class);
  }

 /**
  * Convert an instance of PlayerBonusCampaignItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

