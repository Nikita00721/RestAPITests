/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.util.*;

/**
 * TemplateMarketHeader
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class TemplateMarketHeader {
  public static final String SERIALIZED_NAME_MARKET_TYPE_ID = "MarketTypeId";
  @SerializedName(SERIALIZED_NAME_MARKET_TYPE_ID)
  private Integer marketTypeId;

  public static final String SERIALIZED_NAME_MARKET_NAME = "MarketName";
  @SerializedName(SERIALIZED_NAME_MARKET_NAME)
  private String marketName;

  public static final String SERIALIZED_NAME_MSUM_VALUE = "MsumValue";
  @SerializedName(SERIALIZED_NAME_MSUM_VALUE)
  private Double msumValue;

  public static final String SERIALIZED_NAME_OUTCOMES_NUMBER = "OutcomesNumber";
  @SerializedName(SERIALIZED_NAME_OUTCOMES_NUMBER)
  private Integer outcomesNumber;

  public static final String SERIALIZED_NAME_IS_WIN_LIMIT_PER_SELECTION = "IsWinLimitPerSelection";
  @SerializedName(SERIALIZED_NAME_IS_WIN_LIMIT_PER_SELECTION)
  private Boolean isWinLimitPerSelection;

  public static final String SERIALIZED_NAME_IS_ENABLED = "IsEnabled";
  @SerializedName(SERIALIZED_NAME_IS_ENABLED)
  private Boolean isEnabled;

  public static final String SERIALIZED_NAME_LEFT_MARGIN_RULE_ID = "LeftMarginRuleId";
  @SerializedName(SERIALIZED_NAME_LEFT_MARGIN_RULE_ID)
  private MarginRules leftMarginRuleId;

  public static final String SERIALIZED_NAME_LEFT_MARGIN_KEY = "LeftMarginKey";
  @SerializedName(SERIALIZED_NAME_LEFT_MARGIN_KEY)
  private Double leftMarginKey;

  public static final String SERIALIZED_NAME_LEFT_MARGIN_ADJUSTMENT_TYPE = "LeftMarginAdjustmentType";
  @SerializedName(SERIALIZED_NAME_LEFT_MARGIN_ADJUSTMENT_TYPE)
  private Integer leftMarginAdjustmentType;

  public static final String SERIALIZED_NAME_LEFT_MAX_LINES = "LeftMaxLines";
  @SerializedName(SERIALIZED_NAME_LEFT_MAX_LINES)
  private Integer leftMaxLines;

  public static final String SERIALIZED_NAME_LEFT_MARGIN_ADJUSTMENT_APPLIED = "LeftMarginAdjustmentApplied";
  @SerializedName(SERIALIZED_NAME_LEFT_MARGIN_ADJUSTMENT_APPLIED)
  private Boolean leftMarginAdjustmentApplied;

  public static final String SERIALIZED_NAME_RIGHT_MARGIN_RULE_ID = "RightMarginRuleId";
  @SerializedName(SERIALIZED_NAME_RIGHT_MARGIN_RULE_ID)
  private MarginRules rightMarginRuleId;

  public static final String SERIALIZED_NAME_RIGHT_MARGIN_KEY = "RightMarginKey";
  @SerializedName(SERIALIZED_NAME_RIGHT_MARGIN_KEY)
  private Double rightMarginKey;

  public static final String SERIALIZED_NAME_RIGHT_MARGIN_ADJUSTMENT_TYPE = "RightMarginAdjustmentType";
  @SerializedName(SERIALIZED_NAME_RIGHT_MARGIN_ADJUSTMENT_TYPE)
  private Integer rightMarginAdjustmentType;

  public static final String SERIALIZED_NAME_RIGHT_MAX_LINES = "RightMaxLines";
  @SerializedName(SERIALIZED_NAME_RIGHT_MAX_LINES)
  private Integer rightMaxLines;

  public static final String SERIALIZED_NAME_RIGHT_MARGIN_ADJUSTMENT_APPLIED = "RightMarginAdjustmentApplied";
  @SerializedName(SERIALIZED_NAME_RIGHT_MARGIN_ADJUSTMENT_APPLIED)
  private Boolean rightMarginAdjustmentApplied;

  public static final String SERIALIZED_NAME_HAS_CUSTOM_LIMIT_FACTORS = "HasCustomLimitFactors";
  @SerializedName(SERIALIZED_NAME_HAS_CUSTOM_LIMIT_FACTORS)
  private Boolean hasCustomLimitFactors;

  public static final String SERIALIZED_NAME_HAS_CUSTOM_MARGIN = "HasCustomMargin";
  @SerializedName(SERIALIZED_NAME_HAS_CUSTOM_MARGIN)
  private Boolean hasCustomMargin;

  public static final String SERIALIZED_NAME_SPORT_MARKET_ID = "SportMarketId";
  @SerializedName(SERIALIZED_NAME_SPORT_MARKET_ID)
  private Integer sportMarketId;

  public TemplateMarketHeader() {
  }

  public TemplateMarketHeader marketTypeId(Integer marketTypeId) {
    this.marketTypeId = marketTypeId;
    return this;
  }

   /**
   * Get marketTypeId
   * @return marketTypeId
  **/
  @javax.annotation.Nullable
  public Integer getMarketTypeId() {
    return marketTypeId;
  }

  public void setMarketTypeId(Integer marketTypeId) {
    this.marketTypeId = marketTypeId;
  }


  public TemplateMarketHeader marketName(String marketName) {
    this.marketName = marketName;
    return this;
  }

   /**
   * Get marketName
   * @return marketName
  **/
  @javax.annotation.Nullable
  public String getMarketName() {
    return marketName;
  }

  public void setMarketName(String marketName) {
    this.marketName = marketName;
  }


  public TemplateMarketHeader msumValue(Double msumValue) {
    this.msumValue = msumValue;
    return this;
  }

   /**
   * Get msumValue
   * @return msumValue
  **/
  @javax.annotation.Nullable
  public Double getMsumValue() {
    return msumValue;
  }

  public void setMsumValue(Double msumValue) {
    this.msumValue = msumValue;
  }


  public TemplateMarketHeader outcomesNumber(Integer outcomesNumber) {
    this.outcomesNumber = outcomesNumber;
    return this;
  }

   /**
   * Get outcomesNumber
   * @return outcomesNumber
  **/
  @javax.annotation.Nullable
  public Integer getOutcomesNumber() {
    return outcomesNumber;
  }

  public void setOutcomesNumber(Integer outcomesNumber) {
    this.outcomesNumber = outcomesNumber;
  }


  public TemplateMarketHeader isWinLimitPerSelection(Boolean isWinLimitPerSelection) {
    this.isWinLimitPerSelection = isWinLimitPerSelection;
    return this;
  }

   /**
   * Get isWinLimitPerSelection
   * @return isWinLimitPerSelection
  **/
  @javax.annotation.Nullable
  public Boolean getIsWinLimitPerSelection() {
    return isWinLimitPerSelection;
  }

  public void setIsWinLimitPerSelection(Boolean isWinLimitPerSelection) {
    this.isWinLimitPerSelection = isWinLimitPerSelection;
  }


  public TemplateMarketHeader isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * Get isEnabled
   * @return isEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public TemplateMarketHeader leftMarginRuleId(MarginRules leftMarginRuleId) {
    this.leftMarginRuleId = leftMarginRuleId;
    return this;
  }

   /**
   * Get leftMarginRuleId
   * @return leftMarginRuleId
  **/
  @javax.annotation.Nullable
  public MarginRules getLeftMarginRuleId() {
    return leftMarginRuleId;
  }

  public void setLeftMarginRuleId(MarginRules leftMarginRuleId) {
    this.leftMarginRuleId = leftMarginRuleId;
  }


  public TemplateMarketHeader leftMarginKey(Double leftMarginKey) {
    this.leftMarginKey = leftMarginKey;
    return this;
  }

   /**
   * Get leftMarginKey
   * @return leftMarginKey
  **/
  @javax.annotation.Nullable
  public Double getLeftMarginKey() {
    return leftMarginKey;
  }

  public void setLeftMarginKey(Double leftMarginKey) {
    this.leftMarginKey = leftMarginKey;
  }


  public TemplateMarketHeader leftMarginAdjustmentType(Integer leftMarginAdjustmentType) {
    this.leftMarginAdjustmentType = leftMarginAdjustmentType;
    return this;
  }

   /**
   * Get leftMarginAdjustmentType
   * @return leftMarginAdjustmentType
  **/
  @javax.annotation.Nullable
  public Integer getLeftMarginAdjustmentType() {
    return leftMarginAdjustmentType;
  }

  public void setLeftMarginAdjustmentType(Integer leftMarginAdjustmentType) {
    this.leftMarginAdjustmentType = leftMarginAdjustmentType;
  }


  public TemplateMarketHeader leftMaxLines(Integer leftMaxLines) {
    this.leftMaxLines = leftMaxLines;
    return this;
  }

   /**
   * Get leftMaxLines
   * @return leftMaxLines
  **/
  @javax.annotation.Nullable
  public Integer getLeftMaxLines() {
    return leftMaxLines;
  }

  public void setLeftMaxLines(Integer leftMaxLines) {
    this.leftMaxLines = leftMaxLines;
  }


  public TemplateMarketHeader leftMarginAdjustmentApplied(Boolean leftMarginAdjustmentApplied) {
    this.leftMarginAdjustmentApplied = leftMarginAdjustmentApplied;
    return this;
  }

   /**
   * Get leftMarginAdjustmentApplied
   * @return leftMarginAdjustmentApplied
  **/
  @javax.annotation.Nullable
  public Boolean getLeftMarginAdjustmentApplied() {
    return leftMarginAdjustmentApplied;
  }

  public void setLeftMarginAdjustmentApplied(Boolean leftMarginAdjustmentApplied) {
    this.leftMarginAdjustmentApplied = leftMarginAdjustmentApplied;
  }


  public TemplateMarketHeader rightMarginRuleId(MarginRules rightMarginRuleId) {
    this.rightMarginRuleId = rightMarginRuleId;
    return this;
  }

   /**
   * Get rightMarginRuleId
   * @return rightMarginRuleId
  **/
  @javax.annotation.Nullable
  public MarginRules getRightMarginRuleId() {
    return rightMarginRuleId;
  }

  public void setRightMarginRuleId(MarginRules rightMarginRuleId) {
    this.rightMarginRuleId = rightMarginRuleId;
  }


  public TemplateMarketHeader rightMarginKey(Double rightMarginKey) {
    this.rightMarginKey = rightMarginKey;
    return this;
  }

   /**
   * Get rightMarginKey
   * @return rightMarginKey
  **/
  @javax.annotation.Nullable
  public Double getRightMarginKey() {
    return rightMarginKey;
  }

  public void setRightMarginKey(Double rightMarginKey) {
    this.rightMarginKey = rightMarginKey;
  }


  public TemplateMarketHeader rightMarginAdjustmentType(Integer rightMarginAdjustmentType) {
    this.rightMarginAdjustmentType = rightMarginAdjustmentType;
    return this;
  }

   /**
   * Get rightMarginAdjustmentType
   * @return rightMarginAdjustmentType
  **/
  @javax.annotation.Nullable
  public Integer getRightMarginAdjustmentType() {
    return rightMarginAdjustmentType;
  }

  public void setRightMarginAdjustmentType(Integer rightMarginAdjustmentType) {
    this.rightMarginAdjustmentType = rightMarginAdjustmentType;
  }


  public TemplateMarketHeader rightMaxLines(Integer rightMaxLines) {
    this.rightMaxLines = rightMaxLines;
    return this;
  }

   /**
   * Get rightMaxLines
   * @return rightMaxLines
  **/
  @javax.annotation.Nullable
  public Integer getRightMaxLines() {
    return rightMaxLines;
  }

  public void setRightMaxLines(Integer rightMaxLines) {
    this.rightMaxLines = rightMaxLines;
  }


  public TemplateMarketHeader rightMarginAdjustmentApplied(Boolean rightMarginAdjustmentApplied) {
    this.rightMarginAdjustmentApplied = rightMarginAdjustmentApplied;
    return this;
  }

   /**
   * Get rightMarginAdjustmentApplied
   * @return rightMarginAdjustmentApplied
  **/
  @javax.annotation.Nullable
  public Boolean getRightMarginAdjustmentApplied() {
    return rightMarginAdjustmentApplied;
  }

  public void setRightMarginAdjustmentApplied(Boolean rightMarginAdjustmentApplied) {
    this.rightMarginAdjustmentApplied = rightMarginAdjustmentApplied;
  }


  public TemplateMarketHeader hasCustomLimitFactors(Boolean hasCustomLimitFactors) {
    this.hasCustomLimitFactors = hasCustomLimitFactors;
    return this;
  }

   /**
   * Get hasCustomLimitFactors
   * @return hasCustomLimitFactors
  **/
  @javax.annotation.Nullable
  public Boolean getHasCustomLimitFactors() {
    return hasCustomLimitFactors;
  }

  public void setHasCustomLimitFactors(Boolean hasCustomLimitFactors) {
    this.hasCustomLimitFactors = hasCustomLimitFactors;
  }


  public TemplateMarketHeader hasCustomMargin(Boolean hasCustomMargin) {
    this.hasCustomMargin = hasCustomMargin;
    return this;
  }

   /**
   * Get hasCustomMargin
   * @return hasCustomMargin
  **/
  @javax.annotation.Nullable
  public Boolean getHasCustomMargin() {
    return hasCustomMargin;
  }

  public void setHasCustomMargin(Boolean hasCustomMargin) {
    this.hasCustomMargin = hasCustomMargin;
  }


  public TemplateMarketHeader sportMarketId(Integer sportMarketId) {
    this.sportMarketId = sportMarketId;
    return this;
  }

   /**
   * Get sportMarketId
   * @return sportMarketId
  **/
  @javax.annotation.Nullable
  public Integer getSportMarketId() {
    return sportMarketId;
  }

  public void setSportMarketId(Integer sportMarketId) {
    this.sportMarketId = sportMarketId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TemplateMarketHeader templateMarketHeader = (TemplateMarketHeader) o;
    return Objects.equals(this.marketTypeId, templateMarketHeader.marketTypeId) &&
        Objects.equals(this.marketName, templateMarketHeader.marketName) &&
        Objects.equals(this.msumValue, templateMarketHeader.msumValue) &&
        Objects.equals(this.outcomesNumber, templateMarketHeader.outcomesNumber) &&
        Objects.equals(this.isWinLimitPerSelection, templateMarketHeader.isWinLimitPerSelection) &&
        Objects.equals(this.isEnabled, templateMarketHeader.isEnabled) &&
        Objects.equals(this.leftMarginRuleId, templateMarketHeader.leftMarginRuleId) &&
        Objects.equals(this.leftMarginKey, templateMarketHeader.leftMarginKey) &&
        Objects.equals(this.leftMarginAdjustmentType, templateMarketHeader.leftMarginAdjustmentType) &&
        Objects.equals(this.leftMaxLines, templateMarketHeader.leftMaxLines) &&
        Objects.equals(this.leftMarginAdjustmentApplied, templateMarketHeader.leftMarginAdjustmentApplied) &&
        Objects.equals(this.rightMarginRuleId, templateMarketHeader.rightMarginRuleId) &&
        Objects.equals(this.rightMarginKey, templateMarketHeader.rightMarginKey) &&
        Objects.equals(this.rightMarginAdjustmentType, templateMarketHeader.rightMarginAdjustmentType) &&
        Objects.equals(this.rightMaxLines, templateMarketHeader.rightMaxLines) &&
        Objects.equals(this.rightMarginAdjustmentApplied, templateMarketHeader.rightMarginAdjustmentApplied) &&
        Objects.equals(this.hasCustomLimitFactors, templateMarketHeader.hasCustomLimitFactors) &&
        Objects.equals(this.hasCustomMargin, templateMarketHeader.hasCustomMargin) &&
        Objects.equals(this.sportMarketId, templateMarketHeader.sportMarketId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(marketTypeId, marketName, msumValue, outcomesNumber, isWinLimitPerSelection, isEnabled, leftMarginRuleId, leftMarginKey, leftMarginAdjustmentType, leftMaxLines, leftMarginAdjustmentApplied, rightMarginRuleId, rightMarginKey, rightMarginAdjustmentType, rightMaxLines, rightMarginAdjustmentApplied, hasCustomLimitFactors, hasCustomMargin, sportMarketId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TemplateMarketHeader {\n");
    sb.append("    marketTypeId: ").append(toIndentedString(marketTypeId)).append("\n");
    sb.append("    marketName: ").append(toIndentedString(marketName)).append("\n");
    sb.append("    msumValue: ").append(toIndentedString(msumValue)).append("\n");
    sb.append("    outcomesNumber: ").append(toIndentedString(outcomesNumber)).append("\n");
    sb.append("    isWinLimitPerSelection: ").append(toIndentedString(isWinLimitPerSelection)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    leftMarginRuleId: ").append(toIndentedString(leftMarginRuleId)).append("\n");
    sb.append("    leftMarginKey: ").append(toIndentedString(leftMarginKey)).append("\n");
    sb.append("    leftMarginAdjustmentType: ").append(toIndentedString(leftMarginAdjustmentType)).append("\n");
    sb.append("    leftMaxLines: ").append(toIndentedString(leftMaxLines)).append("\n");
    sb.append("    leftMarginAdjustmentApplied: ").append(toIndentedString(leftMarginAdjustmentApplied)).append("\n");
    sb.append("    rightMarginRuleId: ").append(toIndentedString(rightMarginRuleId)).append("\n");
    sb.append("    rightMarginKey: ").append(toIndentedString(rightMarginKey)).append("\n");
    sb.append("    rightMarginAdjustmentType: ").append(toIndentedString(rightMarginAdjustmentType)).append("\n");
    sb.append("    rightMaxLines: ").append(toIndentedString(rightMaxLines)).append("\n");
    sb.append("    rightMarginAdjustmentApplied: ").append(toIndentedString(rightMarginAdjustmentApplied)).append("\n");
    sb.append("    hasCustomLimitFactors: ").append(toIndentedString(hasCustomLimitFactors)).append("\n");
    sb.append("    hasCustomMargin: ").append(toIndentedString(hasCustomMargin)).append("\n");
    sb.append("    sportMarketId: ").append(toIndentedString(sportMarketId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MarketTypeId");
    openapiFields.add("MarketName");
    openapiFields.add("MsumValue");
    openapiFields.add("OutcomesNumber");
    openapiFields.add("IsWinLimitPerSelection");
    openapiFields.add("IsEnabled");
    openapiFields.add("LeftMarginRuleId");
    openapiFields.add("LeftMarginKey");
    openapiFields.add("LeftMarginAdjustmentType");
    openapiFields.add("LeftMaxLines");
    openapiFields.add("LeftMarginAdjustmentApplied");
    openapiFields.add("RightMarginRuleId");
    openapiFields.add("RightMarginKey");
    openapiFields.add("RightMarginAdjustmentType");
    openapiFields.add("RightMaxLines");
    openapiFields.add("RightMarginAdjustmentApplied");
    openapiFields.add("HasCustomLimitFactors");
    openapiFields.add("HasCustomMargin");
    openapiFields.add("SportMarketId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to TemplateMarketHeader
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TemplateMarketHeader.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TemplateMarketHeader is not found in the empty JSON string", TemplateMarketHeader.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TemplateMarketHeader.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TemplateMarketHeader` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("MarketName") != null && !jsonObj.get("MarketName").isJsonNull()) && !jsonObj.get("MarketName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MarketName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MarketName").toString()));
      }
      // validate the optional field `LeftMarginRuleId`
      if (jsonObj.get("LeftMarginRuleId") != null && !jsonObj.get("LeftMarginRuleId").isJsonNull()) {
        MarginRules.validateJsonElement(jsonObj.get("LeftMarginRuleId"));
      }
      // validate the optional field `RightMarginRuleId`
      if (jsonObj.get("RightMarginRuleId") != null && !jsonObj.get("RightMarginRuleId").isJsonNull()) {
        MarginRules.validateJsonElement(jsonObj.get("RightMarginRuleId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TemplateMarketHeader.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TemplateMarketHeader' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TemplateMarketHeader> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TemplateMarketHeader.class));

       return (TypeAdapter<T>) new TypeAdapter<TemplateMarketHeader>() {
           @Override
           public void write(JsonWriter out, TemplateMarketHeader value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TemplateMarketHeader read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TemplateMarketHeader given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TemplateMarketHeader
  * @throws IOException if the JSON string is invalid with respect to TemplateMarketHeader
  */
  public static TemplateMarketHeader fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TemplateMarketHeader.class);
  }

 /**
  * Convert an instance of TemplateMarketHeader to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

