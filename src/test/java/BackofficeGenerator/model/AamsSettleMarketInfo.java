/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.util.*;

/**
 * AamsSettleMarketInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class AamsSettleMarketInfo {
  public static final String SERIALIZED_NAME_OPERATOR_NAME = "OperatorName";
  @SerializedName(SERIALIZED_NAME_OPERATOR_NAME)
  private String operatorName;

  public static final String SERIALIZED_NAME_INT_EVENT_ID = "IntEventId";
  @SerializedName(SERIALIZED_NAME_INT_EVENT_ID)
  private Long intEventId;

  public static final String SERIALIZED_NAME_INT_EVENT_NAME = "IntEventName";
  @SerializedName(SERIALIZED_NAME_INT_EVENT_NAME)
  private String intEventName;

  public static final String SERIALIZED_NAME_FEED_MARKET_ID = "FeedMarketId";
  @SerializedName(SERIALIZED_NAME_FEED_MARKET_ID)
  private Long feedMarketId;

  public static final String SERIALIZED_NAME_INT_MARKET_NAME = "IntMarketName";
  @SerializedName(SERIALIZED_NAME_INT_MARKET_NAME)
  private String intMarketName;

  public static final String SERIALIZED_NAME_FEED_SELECTION_ID = "FeedSelectionId";
  @SerializedName(SERIALIZED_NAME_FEED_SELECTION_ID)
  private Long feedSelectionId;

  public static final String SERIALIZED_NAME_INT_SELECTION_NAME = "IntSelectionName";
  @SerializedName(SERIALIZED_NAME_INT_SELECTION_NAME)
  private String intSelectionName;

  public static final String SERIALIZED_NAME_MARKET_STATUS = "MarketStatus";
  @SerializedName(SERIALIZED_NAME_MARKET_STATUS)
  private Integer marketStatus;

  public static final String SERIALIZED_NAME_MARKET_STATUS_NAME = "MarketStatusName";
  @SerializedName(SERIALIZED_NAME_MARKET_STATUS_NAME)
  private String marketStatusName;

  public static final String SERIALIZED_NAME_PROCESSED_MESSAGE = "ProcessedMessage";
  @SerializedName(SERIALIZED_NAME_PROCESSED_MESSAGE)
  private String processedMessage;

  public static final String SERIALIZED_NAME_SPECIAL_ODDS_VALUE = "SpecialOddsValue";
  @SerializedName(SERIALIZED_NAME_SPECIAL_ODDS_VALUE)
  private Map<String, String> specialOddsValue;

  public static final String SERIALIZED_NAME_EXT_EVENT_ID = "ExtEventId";
  @SerializedName(SERIALIZED_NAME_EXT_EVENT_ID)
  private String extEventId;

  public static final String SERIALIZED_NAME_EXT_MARKET_ID = "ExtMarketId";
  @SerializedName(SERIALIZED_NAME_EXT_MARKET_ID)
  private Integer extMarketId;

  public static final String SERIALIZED_NAME_OPERATOR_ID = "OperatorId";
  @SerializedName(SERIALIZED_NAME_OPERATOR_ID)
  private Integer operatorId;

  public AamsSettleMarketInfo() {
  }

  public AamsSettleMarketInfo(
     Map<String, String> specialOddsValue
  ) {
    this();
    this.specialOddsValue = specialOddsValue;
  }

  public AamsSettleMarketInfo operatorName(String operatorName) {
    this.operatorName = operatorName;
    return this;
  }

   /**
   * Get operatorName
   * @return operatorName
  **/
  @javax.annotation.Nullable
  public String getOperatorName() {
    return operatorName;
  }

  public void setOperatorName(String operatorName) {
    this.operatorName = operatorName;
  }


  public AamsSettleMarketInfo intEventId(Long intEventId) {
    this.intEventId = intEventId;
    return this;
  }

   /**
   * Get intEventId
   * @return intEventId
  **/
  @javax.annotation.Nullable
  public Long getIntEventId() {
    return intEventId;
  }

  public void setIntEventId(Long intEventId) {
    this.intEventId = intEventId;
  }


  public AamsSettleMarketInfo intEventName(String intEventName) {
    this.intEventName = intEventName;
    return this;
  }

   /**
   * Get intEventName
   * @return intEventName
  **/
  @javax.annotation.Nullable
  public String getIntEventName() {
    return intEventName;
  }

  public void setIntEventName(String intEventName) {
    this.intEventName = intEventName;
  }


  public AamsSettleMarketInfo feedMarketId(Long feedMarketId) {
    this.feedMarketId = feedMarketId;
    return this;
  }

   /**
   * Get feedMarketId
   * @return feedMarketId
  **/
  @javax.annotation.Nullable
  public Long getFeedMarketId() {
    return feedMarketId;
  }

  public void setFeedMarketId(Long feedMarketId) {
    this.feedMarketId = feedMarketId;
  }


  public AamsSettleMarketInfo intMarketName(String intMarketName) {
    this.intMarketName = intMarketName;
    return this;
  }

   /**
   * Get intMarketName
   * @return intMarketName
  **/
  @javax.annotation.Nullable
  public String getIntMarketName() {
    return intMarketName;
  }

  public void setIntMarketName(String intMarketName) {
    this.intMarketName = intMarketName;
  }


  public AamsSettleMarketInfo feedSelectionId(Long feedSelectionId) {
    this.feedSelectionId = feedSelectionId;
    return this;
  }

   /**
   * Get feedSelectionId
   * @return feedSelectionId
  **/
  @javax.annotation.Nullable
  public Long getFeedSelectionId() {
    return feedSelectionId;
  }

  public void setFeedSelectionId(Long feedSelectionId) {
    this.feedSelectionId = feedSelectionId;
  }


  public AamsSettleMarketInfo intSelectionName(String intSelectionName) {
    this.intSelectionName = intSelectionName;
    return this;
  }

   /**
   * Get intSelectionName
   * @return intSelectionName
  **/
  @javax.annotation.Nullable
  public String getIntSelectionName() {
    return intSelectionName;
  }

  public void setIntSelectionName(String intSelectionName) {
    this.intSelectionName = intSelectionName;
  }


  public AamsSettleMarketInfo marketStatus(Integer marketStatus) {
    this.marketStatus = marketStatus;
    return this;
  }

   /**
   * Get marketStatus
   * @return marketStatus
  **/
  @javax.annotation.Nullable
  public Integer getMarketStatus() {
    return marketStatus;
  }

  public void setMarketStatus(Integer marketStatus) {
    this.marketStatus = marketStatus;
  }


  public AamsSettleMarketInfo marketStatusName(String marketStatusName) {
    this.marketStatusName = marketStatusName;
    return this;
  }

   /**
   * Get marketStatusName
   * @return marketStatusName
  **/
  @javax.annotation.Nullable
  public String getMarketStatusName() {
    return marketStatusName;
  }

  public void setMarketStatusName(String marketStatusName) {
    this.marketStatusName = marketStatusName;
  }


  public AamsSettleMarketInfo processedMessage(String processedMessage) {
    this.processedMessage = processedMessage;
    return this;
  }

   /**
   * Get processedMessage
   * @return processedMessage
  **/
  @javax.annotation.Nullable
  public String getProcessedMessage() {
    return processedMessage;
  }

  public void setProcessedMessage(String processedMessage) {
    this.processedMessage = processedMessage;
  }


   /**
   * Get specialOddsValue
   * @return specialOddsValue
  **/
  @javax.annotation.Nullable
  public Map<String, String> getSpecialOddsValue() {
    return specialOddsValue;
  }



  public AamsSettleMarketInfo extEventId(String extEventId) {
    this.extEventId = extEventId;
    return this;
  }

   /**
   * Get extEventId
   * @return extEventId
  **/
  @javax.annotation.Nullable
  public String getExtEventId() {
    return extEventId;
  }

  public void setExtEventId(String extEventId) {
    this.extEventId = extEventId;
  }


  public AamsSettleMarketInfo extMarketId(Integer extMarketId) {
    this.extMarketId = extMarketId;
    return this;
  }

   /**
   * Get extMarketId
   * @return extMarketId
  **/
  @javax.annotation.Nullable
  public Integer getExtMarketId() {
    return extMarketId;
  }

  public void setExtMarketId(Integer extMarketId) {
    this.extMarketId = extMarketId;
  }


  public AamsSettleMarketInfo operatorId(Integer operatorId) {
    this.operatorId = operatorId;
    return this;
  }

   /**
   * Get operatorId
   * @return operatorId
  **/
  @javax.annotation.Nullable
  public Integer getOperatorId() {
    return operatorId;
  }

  public void setOperatorId(Integer operatorId) {
    this.operatorId = operatorId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AamsSettleMarketInfo aamsSettleMarketInfo = (AamsSettleMarketInfo) o;
    return Objects.equals(this.operatorName, aamsSettleMarketInfo.operatorName) &&
        Objects.equals(this.intEventId, aamsSettleMarketInfo.intEventId) &&
        Objects.equals(this.intEventName, aamsSettleMarketInfo.intEventName) &&
        Objects.equals(this.feedMarketId, aamsSettleMarketInfo.feedMarketId) &&
        Objects.equals(this.intMarketName, aamsSettleMarketInfo.intMarketName) &&
        Objects.equals(this.feedSelectionId, aamsSettleMarketInfo.feedSelectionId) &&
        Objects.equals(this.intSelectionName, aamsSettleMarketInfo.intSelectionName) &&
        Objects.equals(this.marketStatus, aamsSettleMarketInfo.marketStatus) &&
        Objects.equals(this.marketStatusName, aamsSettleMarketInfo.marketStatusName) &&
        Objects.equals(this.processedMessage, aamsSettleMarketInfo.processedMessage) &&
        Objects.equals(this.specialOddsValue, aamsSettleMarketInfo.specialOddsValue) &&
        Objects.equals(this.extEventId, aamsSettleMarketInfo.extEventId) &&
        Objects.equals(this.extMarketId, aamsSettleMarketInfo.extMarketId) &&
        Objects.equals(this.operatorId, aamsSettleMarketInfo.operatorId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(operatorName, intEventId, intEventName, feedMarketId, intMarketName, feedSelectionId, intSelectionName, marketStatus, marketStatusName, processedMessage, specialOddsValue, extEventId, extMarketId, operatorId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AamsSettleMarketInfo {\n");
    sb.append("    operatorName: ").append(toIndentedString(operatorName)).append("\n");
    sb.append("    intEventId: ").append(toIndentedString(intEventId)).append("\n");
    sb.append("    intEventName: ").append(toIndentedString(intEventName)).append("\n");
    sb.append("    feedMarketId: ").append(toIndentedString(feedMarketId)).append("\n");
    sb.append("    intMarketName: ").append(toIndentedString(intMarketName)).append("\n");
    sb.append("    feedSelectionId: ").append(toIndentedString(feedSelectionId)).append("\n");
    sb.append("    intSelectionName: ").append(toIndentedString(intSelectionName)).append("\n");
    sb.append("    marketStatus: ").append(toIndentedString(marketStatus)).append("\n");
    sb.append("    marketStatusName: ").append(toIndentedString(marketStatusName)).append("\n");
    sb.append("    processedMessage: ").append(toIndentedString(processedMessage)).append("\n");
    sb.append("    specialOddsValue: ").append(toIndentedString(specialOddsValue)).append("\n");
    sb.append("    extEventId: ").append(toIndentedString(extEventId)).append("\n");
    sb.append("    extMarketId: ").append(toIndentedString(extMarketId)).append("\n");
    sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OperatorName");
    openapiFields.add("IntEventId");
    openapiFields.add("IntEventName");
    openapiFields.add("FeedMarketId");
    openapiFields.add("IntMarketName");
    openapiFields.add("FeedSelectionId");
    openapiFields.add("IntSelectionName");
    openapiFields.add("MarketStatus");
    openapiFields.add("MarketStatusName");
    openapiFields.add("ProcessedMessage");
    openapiFields.add("SpecialOddsValue");
    openapiFields.add("ExtEventId");
    openapiFields.add("ExtMarketId");
    openapiFields.add("OperatorId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AamsSettleMarketInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AamsSettleMarketInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AamsSettleMarketInfo is not found in the empty JSON string", AamsSettleMarketInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AamsSettleMarketInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AamsSettleMarketInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("OperatorName") != null && !jsonObj.get("OperatorName").isJsonNull()) && !jsonObj.get("OperatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OperatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OperatorName").toString()));
      }
      if ((jsonObj.get("IntEventName") != null && !jsonObj.get("IntEventName").isJsonNull()) && !jsonObj.get("IntEventName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IntEventName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IntEventName").toString()));
      }
      if ((jsonObj.get("IntMarketName") != null && !jsonObj.get("IntMarketName").isJsonNull()) && !jsonObj.get("IntMarketName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IntMarketName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IntMarketName").toString()));
      }
      if ((jsonObj.get("IntSelectionName") != null && !jsonObj.get("IntSelectionName").isJsonNull()) && !jsonObj.get("IntSelectionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `IntSelectionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("IntSelectionName").toString()));
      }
      if ((jsonObj.get("MarketStatusName") != null && !jsonObj.get("MarketStatusName").isJsonNull()) && !jsonObj.get("MarketStatusName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MarketStatusName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MarketStatusName").toString()));
      }
      if ((jsonObj.get("ProcessedMessage") != null && !jsonObj.get("ProcessedMessage").isJsonNull()) && !jsonObj.get("ProcessedMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProcessedMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProcessedMessage").toString()));
      }
      if ((jsonObj.get("ExtEventId") != null && !jsonObj.get("ExtEventId").isJsonNull()) && !jsonObj.get("ExtEventId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ExtEventId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ExtEventId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AamsSettleMarketInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AamsSettleMarketInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AamsSettleMarketInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AamsSettleMarketInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AamsSettleMarketInfo>() {
           @Override
           public void write(JsonWriter out, AamsSettleMarketInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AamsSettleMarketInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AamsSettleMarketInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AamsSettleMarketInfo
  * @throws IOException if the JSON string is invalid with respect to AamsSettleMarketInfo
  */
  public static AamsSettleMarketInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AamsSettleMarketInfo.class);
  }

 /**
  * Convert an instance of AamsSettleMarketInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

