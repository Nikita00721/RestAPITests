/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.util.*;

/**
 * BoostItemDetailWithMarket
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class BoostItemDetailWithMarket {
  public static final String SERIALIZED_NAME_BOOST_TEMPLATE_NAME = "BoostTemplateName";
  @SerializedName(SERIALIZED_NAME_BOOST_TEMPLATE_NAME)
  private String boostTemplateName;

  public static final String SERIALIZED_NAME_BOOST_TEMPLATE_ID = "BoostTemplateId";
  @SerializedName(SERIALIZED_NAME_BOOST_TEMPLATE_ID)
  private Integer boostTemplateId;

  public static final String SERIALIZED_NAME_BOOST_TYPE = "BoostType";
  @SerializedName(SERIALIZED_NAME_BOOST_TYPE)
  private BoostItemType boostType;

  public static final String SERIALIZED_NAME_IS_ENABLED = "IsEnabled";
  @SerializedName(SERIALIZED_NAME_IS_ENABLED)
  private Boolean isEnabled;

  public static final String SERIALIZED_NAME_IS_MANUAL = "IsManual";
  @SerializedName(SERIALIZED_NAME_IS_MANUAL)
  private Boolean isManual;

  public static final String SERIALIZED_NAME_IS_LIMITED_TIME = "IsLimitedTime";
  @SerializedName(SERIALIZED_NAME_IS_LIMITED_TIME)
  private Boolean isLimitedTime;

  public static final String SERIALIZED_NAME_BOOST_PROPS = "BoostProps";
  @SerializedName(SERIALIZED_NAME_BOOST_PROPS)
  private BoostItemProps boostProps;

  public static final String SERIALIZED_NAME_TEMPLATE_LADDER_ID = "TemplateLadderId";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_LADDER_ID)
  private LadderTypes templateLadderId;

  public static final String SERIALIZED_NAME_BOOST_MARKET = "BoostMarket";
  @SerializedName(SERIALIZED_NAME_BOOST_MARKET)
  private BoostMarketDetails boostMarket;

  public static final String SERIALIZED_NAME_BOOST_ITEM_ID = "BoostItemId";
  @SerializedName(SERIALIZED_NAME_BOOST_ITEM_ID)
  private Integer boostItemId;

  public BoostItemDetailWithMarket() {
  }

  public BoostItemDetailWithMarket boostTemplateName(String boostTemplateName) {
    this.boostTemplateName = boostTemplateName;
    return this;
  }

   /**
   * Get boostTemplateName
   * @return boostTemplateName
  **/
  @javax.annotation.Nullable
  public String getBoostTemplateName() {
    return boostTemplateName;
  }

  public void setBoostTemplateName(String boostTemplateName) {
    this.boostTemplateName = boostTemplateName;
  }


  public BoostItemDetailWithMarket boostTemplateId(Integer boostTemplateId) {
    this.boostTemplateId = boostTemplateId;
    return this;
  }

   /**
   * Get boostTemplateId
   * @return boostTemplateId
  **/
  @javax.annotation.Nullable
  public Integer getBoostTemplateId() {
    return boostTemplateId;
  }

  public void setBoostTemplateId(Integer boostTemplateId) {
    this.boostTemplateId = boostTemplateId;
  }


  public BoostItemDetailWithMarket boostType(BoostItemType boostType) {
    this.boostType = boostType;
    return this;
  }

   /**
   * Get boostType
   * @return boostType
  **/
  @javax.annotation.Nullable
  public BoostItemType getBoostType() {
    return boostType;
  }

  public void setBoostType(BoostItemType boostType) {
    this.boostType = boostType;
  }


  public BoostItemDetailWithMarket isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * Get isEnabled
   * @return isEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public BoostItemDetailWithMarket isManual(Boolean isManual) {
    this.isManual = isManual;
    return this;
  }

   /**
   * Get isManual
   * @return isManual
  **/
  @javax.annotation.Nullable
  public Boolean getIsManual() {
    return isManual;
  }

  public void setIsManual(Boolean isManual) {
    this.isManual = isManual;
  }


  public BoostItemDetailWithMarket isLimitedTime(Boolean isLimitedTime) {
    this.isLimitedTime = isLimitedTime;
    return this;
  }

   /**
   * Get isLimitedTime
   * @return isLimitedTime
  **/
  @javax.annotation.Nullable
  public Boolean getIsLimitedTime() {
    return isLimitedTime;
  }

  public void setIsLimitedTime(Boolean isLimitedTime) {
    this.isLimitedTime = isLimitedTime;
  }


  public BoostItemDetailWithMarket boostProps(BoostItemProps boostProps) {
    this.boostProps = boostProps;
    return this;
  }

   /**
   * Get boostProps
   * @return boostProps
  **/
  @javax.annotation.Nullable
  public BoostItemProps getBoostProps() {
    return boostProps;
  }

  public void setBoostProps(BoostItemProps boostProps) {
    this.boostProps = boostProps;
  }


  public BoostItemDetailWithMarket templateLadderId(LadderTypes templateLadderId) {
    this.templateLadderId = templateLadderId;
    return this;
  }

   /**
   * Get templateLadderId
   * @return templateLadderId
  **/
  @javax.annotation.Nullable
  public LadderTypes getTemplateLadderId() {
    return templateLadderId;
  }

  public void setTemplateLadderId(LadderTypes templateLadderId) {
    this.templateLadderId = templateLadderId;
  }


  public BoostItemDetailWithMarket boostMarket(BoostMarketDetails boostMarket) {
    this.boostMarket = boostMarket;
    return this;
  }

   /**
   * Get boostMarket
   * @return boostMarket
  **/
  @javax.annotation.Nullable
  public BoostMarketDetails getBoostMarket() {
    return boostMarket;
  }

  public void setBoostMarket(BoostMarketDetails boostMarket) {
    this.boostMarket = boostMarket;
  }


  public BoostItemDetailWithMarket boostItemId(Integer boostItemId) {
    this.boostItemId = boostItemId;
    return this;
  }

   /**
   * Get boostItemId
   * @return boostItemId
  **/
  @javax.annotation.Nullable
  public Integer getBoostItemId() {
    return boostItemId;
  }

  public void setBoostItemId(Integer boostItemId) {
    this.boostItemId = boostItemId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BoostItemDetailWithMarket boostItemDetailWithMarket = (BoostItemDetailWithMarket) o;
    return Objects.equals(this.boostTemplateName, boostItemDetailWithMarket.boostTemplateName) &&
        Objects.equals(this.boostTemplateId, boostItemDetailWithMarket.boostTemplateId) &&
        Objects.equals(this.boostType, boostItemDetailWithMarket.boostType) &&
        Objects.equals(this.isEnabled, boostItemDetailWithMarket.isEnabled) &&
        Objects.equals(this.isManual, boostItemDetailWithMarket.isManual) &&
        Objects.equals(this.isLimitedTime, boostItemDetailWithMarket.isLimitedTime) &&
        Objects.equals(this.boostProps, boostItemDetailWithMarket.boostProps) &&
        Objects.equals(this.templateLadderId, boostItemDetailWithMarket.templateLadderId) &&
        Objects.equals(this.boostMarket, boostItemDetailWithMarket.boostMarket) &&
        Objects.equals(this.boostItemId, boostItemDetailWithMarket.boostItemId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(boostTemplateName, boostTemplateId, boostType, isEnabled, isManual, isLimitedTime, boostProps, templateLadderId, boostMarket, boostItemId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BoostItemDetailWithMarket {\n");
    sb.append("    boostTemplateName: ").append(toIndentedString(boostTemplateName)).append("\n");
    sb.append("    boostTemplateId: ").append(toIndentedString(boostTemplateId)).append("\n");
    sb.append("    boostType: ").append(toIndentedString(boostType)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    isManual: ").append(toIndentedString(isManual)).append("\n");
    sb.append("    isLimitedTime: ").append(toIndentedString(isLimitedTime)).append("\n");
    sb.append("    boostProps: ").append(toIndentedString(boostProps)).append("\n");
    sb.append("    templateLadderId: ").append(toIndentedString(templateLadderId)).append("\n");
    sb.append("    boostMarket: ").append(toIndentedString(boostMarket)).append("\n");
    sb.append("    boostItemId: ").append(toIndentedString(boostItemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BoostTemplateName");
    openapiFields.add("BoostTemplateId");
    openapiFields.add("BoostType");
    openapiFields.add("IsEnabled");
    openapiFields.add("IsManual");
    openapiFields.add("IsLimitedTime");
    openapiFields.add("BoostProps");
    openapiFields.add("TemplateLadderId");
    openapiFields.add("BoostMarket");
    openapiFields.add("BoostItemId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to BoostItemDetailWithMarket
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BoostItemDetailWithMarket.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BoostItemDetailWithMarket is not found in the empty JSON string", BoostItemDetailWithMarket.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BoostItemDetailWithMarket.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BoostItemDetailWithMarket` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("BoostTemplateName") != null && !jsonObj.get("BoostTemplateName").isJsonNull()) && !jsonObj.get("BoostTemplateName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BoostTemplateName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BoostTemplateName").toString()));
      }
      // validate the optional field `BoostType`
      if (jsonObj.get("BoostType") != null && !jsonObj.get("BoostType").isJsonNull()) {
        BoostItemType.validateJsonElement(jsonObj.get("BoostType"));
      }
      // validate the optional field `BoostProps`
      if (jsonObj.get("BoostProps") != null && !jsonObj.get("BoostProps").isJsonNull()) {
        BoostItemProps.validateJsonElement(jsonObj.get("BoostProps"));
      }
      // validate the optional field `TemplateLadderId`
      if (jsonObj.get("TemplateLadderId") != null && !jsonObj.get("TemplateLadderId").isJsonNull()) {
        LadderTypes.validateJsonElement(jsonObj.get("TemplateLadderId"));
      }
      // validate the optional field `BoostMarket`
      if (jsonObj.get("BoostMarket") != null && !jsonObj.get("BoostMarket").isJsonNull()) {
        BoostMarketDetails.validateJsonElement(jsonObj.get("BoostMarket"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BoostItemDetailWithMarket.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BoostItemDetailWithMarket' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BoostItemDetailWithMarket> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BoostItemDetailWithMarket.class));

       return (TypeAdapter<T>) new TypeAdapter<BoostItemDetailWithMarket>() {
           @Override
           public void write(JsonWriter out, BoostItemDetailWithMarket value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BoostItemDetailWithMarket read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BoostItemDetailWithMarket given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BoostItemDetailWithMarket
  * @throws IOException if the JSON string is invalid with respect to BoostItemDetailWithMarket
  */
  public static BoostItemDetailWithMarket fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BoostItemDetailWithMarket.class);
  }

 /**
  * Convert an instance of BoostItemDetailWithMarket to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

