/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import com.google.gson.JsonElement;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;

/**
 * Gets or Sets DistributionFilters
 */
@JsonAdapter(DistributionFilters.Adapter.class)
public enum DistributionFilters {
  
  All(0),
  
  Invalid(1),
  
  EmptyAmount(2),
  
  FileUploaded(3),
  
  ManuallyUploaded(4);

  private Integer value;

  DistributionFilters(Integer value) {
    this.value = value;
  }

  public Integer getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static DistributionFilters fromValue(Integer value) {
    for (DistributionFilters b : DistributionFilters.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<DistributionFilters> {
    @Override
    public void write(final JsonWriter jsonWriter, final DistributionFilters enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public DistributionFilters read(final JsonReader jsonReader) throws IOException {
      Integer value = jsonReader.nextInt();
      return DistributionFilters.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    Integer value = jsonElement.getAsInt();
    DistributionFilters.fromValue(value);
  }
}

