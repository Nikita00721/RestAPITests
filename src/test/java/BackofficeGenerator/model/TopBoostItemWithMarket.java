/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;

/**
 * TopBoostItemWithMarket
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class TopBoostItemWithMarket {
  public static final String SERIALIZED_NAME_BOOST_TEMPLATE_NAME = "BoostTemplateName";
  @SerializedName(SERIALIZED_NAME_BOOST_TEMPLATE_NAME)
  private String boostTemplateName;

  public static final String SERIALIZED_NAME_BOOST_TEMPLATE_ID = "BoostTemplateId";
  @SerializedName(SERIALIZED_NAME_BOOST_TEMPLATE_ID)
  private Integer boostTemplateId;

  public static final String SERIALIZED_NAME_EVENT_NAME = "EventName";
  @SerializedName(SERIALIZED_NAME_EVENT_NAME)
  private String eventName;

  public static final String SERIALIZED_NAME_SPORT_NAME = "SportName";
  @SerializedName(SERIALIZED_NAME_SPORT_NAME)
  private String sportName;

  public static final String SERIALIZED_NAME_CAT_NAME = "CatName";
  @SerializedName(SERIALIZED_NAME_CAT_NAME)
  private String catName;

  public static final String SERIALIZED_NAME_CHAMP_NAME = "ChampName";
  @SerializedName(SERIALIZED_NAME_CHAMP_NAME)
  private String champName;

  public static final String SERIALIZED_NAME_EVENT_ID = "EventId";
  @SerializedName(SERIALIZED_NAME_EVENT_ID)
  private Long eventId;

  public static final String SERIALIZED_NAME_EVENT_DATE = "EventDate";
  @SerializedName(SERIALIZED_NAME_EVENT_DATE)
  private OffsetDateTime eventDate;

  public static final String SERIALIZED_NAME_OFFER_START_TIME = "OfferStartTime";
  @SerializedName(SERIALIZED_NAME_OFFER_START_TIME)
  private OffsetDateTime offerStartTime;

  public static final String SERIALIZED_NAME_OFFER_END_TIME = "OfferEndTime";
  @SerializedName(SERIALIZED_NAME_OFFER_END_TIME)
  private OffsetDateTime offerEndTime;

  public static final String SERIALIZED_NAME_IS_ENABLED = "IsEnabled";
  @SerializedName(SERIALIZED_NAME_IS_ENABLED)
  private Boolean isEnabled;

  public static final String SERIALIZED_NAME_IS_TOP = "IsTop";
  @SerializedName(SERIALIZED_NAME_IS_TOP)
  private Boolean isTop;

  public static final String SERIALIZED_NAME_IS_MAIN_PAGE = "IsMainPage";
  @SerializedName(SERIALIZED_NAME_IS_MAIN_PAGE)
  private Boolean isMainPage;

  public static final String SERIALIZED_NAME_ORDER = "Order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private Integer order;

  public static final String SERIALIZED_NAME_BOOST_PROPS = "BoostProps";
  @SerializedName(SERIALIZED_NAME_BOOST_PROPS)
  private BoostItemProps boostProps;

  public static final String SERIALIZED_NAME_IS_LIMITED_TIME = "IsLimitedTime";
  @SerializedName(SERIALIZED_NAME_IS_LIMITED_TIME)
  private Boolean isLimitedTime;

  public static final String SERIALIZED_NAME_BOOST_MARKET = "BoostMarket";
  @SerializedName(SERIALIZED_NAME_BOOST_MARKET)
  private BoostMarketDetails boostMarket;

  public static final String SERIALIZED_NAME_BOOST_ITEM_ID = "BoostItemId";
  @SerializedName(SERIALIZED_NAME_BOOST_ITEM_ID)
  private Integer boostItemId;

  public TopBoostItemWithMarket() {
  }

  public TopBoostItemWithMarket boostTemplateName(String boostTemplateName) {
    this.boostTemplateName = boostTemplateName;
    return this;
  }

   /**
   * Get boostTemplateName
   * @return boostTemplateName
  **/
  @javax.annotation.Nullable
  public String getBoostTemplateName() {
    return boostTemplateName;
  }

  public void setBoostTemplateName(String boostTemplateName) {
    this.boostTemplateName = boostTemplateName;
  }


  public TopBoostItemWithMarket boostTemplateId(Integer boostTemplateId) {
    this.boostTemplateId = boostTemplateId;
    return this;
  }

   /**
   * Get boostTemplateId
   * @return boostTemplateId
  **/
  @javax.annotation.Nullable
  public Integer getBoostTemplateId() {
    return boostTemplateId;
  }

  public void setBoostTemplateId(Integer boostTemplateId) {
    this.boostTemplateId = boostTemplateId;
  }


  public TopBoostItemWithMarket eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

   /**
   * Get eventName
   * @return eventName
  **/
  @javax.annotation.Nullable
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }


  public TopBoostItemWithMarket sportName(String sportName) {
    this.sportName = sportName;
    return this;
  }

   /**
   * Get sportName
   * @return sportName
  **/
  @javax.annotation.Nullable
  public String getSportName() {
    return sportName;
  }

  public void setSportName(String sportName) {
    this.sportName = sportName;
  }


  public TopBoostItemWithMarket catName(String catName) {
    this.catName = catName;
    return this;
  }

   /**
   * Get catName
   * @return catName
  **/
  @javax.annotation.Nullable
  public String getCatName() {
    return catName;
  }

  public void setCatName(String catName) {
    this.catName = catName;
  }


  public TopBoostItemWithMarket champName(String champName) {
    this.champName = champName;
    return this;
  }

   /**
   * Get champName
   * @return champName
  **/
  @javax.annotation.Nullable
  public String getChampName() {
    return champName;
  }

  public void setChampName(String champName) {
    this.champName = champName;
  }


  public TopBoostItemWithMarket eventId(Long eventId) {
    this.eventId = eventId;
    return this;
  }

   /**
   * Get eventId
   * @return eventId
  **/
  @javax.annotation.Nullable
  public Long getEventId() {
    return eventId;
  }

  public void setEventId(Long eventId) {
    this.eventId = eventId;
  }


  public TopBoostItemWithMarket eventDate(OffsetDateTime eventDate) {
    this.eventDate = eventDate;
    return this;
  }

   /**
   * Get eventDate
   * @return eventDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEventDate() {
    return eventDate;
  }

  public void setEventDate(OffsetDateTime eventDate) {
    this.eventDate = eventDate;
  }


  public TopBoostItemWithMarket offerStartTime(OffsetDateTime offerStartTime) {
    this.offerStartTime = offerStartTime;
    return this;
  }

   /**
   * Get offerStartTime
   * @return offerStartTime
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getOfferStartTime() {
    return offerStartTime;
  }

  public void setOfferStartTime(OffsetDateTime offerStartTime) {
    this.offerStartTime = offerStartTime;
  }


  public TopBoostItemWithMarket offerEndTime(OffsetDateTime offerEndTime) {
    this.offerEndTime = offerEndTime;
    return this;
  }

   /**
   * Get offerEndTime
   * @return offerEndTime
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getOfferEndTime() {
    return offerEndTime;
  }

  public void setOfferEndTime(OffsetDateTime offerEndTime) {
    this.offerEndTime = offerEndTime;
  }


  public TopBoostItemWithMarket isEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
    return this;
  }

   /**
   * Get isEnabled
   * @return isEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getIsEnabled() {
    return isEnabled;
  }

  public void setIsEnabled(Boolean isEnabled) {
    this.isEnabled = isEnabled;
  }


  public TopBoostItemWithMarket isTop(Boolean isTop) {
    this.isTop = isTop;
    return this;
  }

   /**
   * Get isTop
   * @return isTop
  **/
  @javax.annotation.Nullable
  public Boolean getIsTop() {
    return isTop;
  }

  public void setIsTop(Boolean isTop) {
    this.isTop = isTop;
  }


  public TopBoostItemWithMarket isMainPage(Boolean isMainPage) {
    this.isMainPage = isMainPage;
    return this;
  }

   /**
   * Get isMainPage
   * @return isMainPage
  **/
  @javax.annotation.Nullable
  public Boolean getIsMainPage() {
    return isMainPage;
  }

  public void setIsMainPage(Boolean isMainPage) {
    this.isMainPage = isMainPage;
  }


  public TopBoostItemWithMarket order(Integer order) {
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nullable
  public Integer getOrder() {
    return order;
  }

  public void setOrder(Integer order) {
    this.order = order;
  }


  public TopBoostItemWithMarket boostProps(BoostItemProps boostProps) {
    this.boostProps = boostProps;
    return this;
  }

   /**
   * Get boostProps
   * @return boostProps
  **/
  @javax.annotation.Nullable
  public BoostItemProps getBoostProps() {
    return boostProps;
  }

  public void setBoostProps(BoostItemProps boostProps) {
    this.boostProps = boostProps;
  }


  public TopBoostItemWithMarket isLimitedTime(Boolean isLimitedTime) {
    this.isLimitedTime = isLimitedTime;
    return this;
  }

   /**
   * Get isLimitedTime
   * @return isLimitedTime
  **/
  @javax.annotation.Nullable
  public Boolean getIsLimitedTime() {
    return isLimitedTime;
  }

  public void setIsLimitedTime(Boolean isLimitedTime) {
    this.isLimitedTime = isLimitedTime;
  }


  public TopBoostItemWithMarket boostMarket(BoostMarketDetails boostMarket) {
    this.boostMarket = boostMarket;
    return this;
  }

   /**
   * Get boostMarket
   * @return boostMarket
  **/
  @javax.annotation.Nullable
  public BoostMarketDetails getBoostMarket() {
    return boostMarket;
  }

  public void setBoostMarket(BoostMarketDetails boostMarket) {
    this.boostMarket = boostMarket;
  }


  public TopBoostItemWithMarket boostItemId(Integer boostItemId) {
    this.boostItemId = boostItemId;
    return this;
  }

   /**
   * Get boostItemId
   * @return boostItemId
  **/
  @javax.annotation.Nullable
  public Integer getBoostItemId() {
    return boostItemId;
  }

  public void setBoostItemId(Integer boostItemId) {
    this.boostItemId = boostItemId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TopBoostItemWithMarket topBoostItemWithMarket = (TopBoostItemWithMarket) o;
    return Objects.equals(this.boostTemplateName, topBoostItemWithMarket.boostTemplateName) &&
        Objects.equals(this.boostTemplateId, topBoostItemWithMarket.boostTemplateId) &&
        Objects.equals(this.eventName, topBoostItemWithMarket.eventName) &&
        Objects.equals(this.sportName, topBoostItemWithMarket.sportName) &&
        Objects.equals(this.catName, topBoostItemWithMarket.catName) &&
        Objects.equals(this.champName, topBoostItemWithMarket.champName) &&
        Objects.equals(this.eventId, topBoostItemWithMarket.eventId) &&
        Objects.equals(this.eventDate, topBoostItemWithMarket.eventDate) &&
        Objects.equals(this.offerStartTime, topBoostItemWithMarket.offerStartTime) &&
        Objects.equals(this.offerEndTime, topBoostItemWithMarket.offerEndTime) &&
        Objects.equals(this.isEnabled, topBoostItemWithMarket.isEnabled) &&
        Objects.equals(this.isTop, topBoostItemWithMarket.isTop) &&
        Objects.equals(this.isMainPage, topBoostItemWithMarket.isMainPage) &&
        Objects.equals(this.order, topBoostItemWithMarket.order) &&
        Objects.equals(this.boostProps, topBoostItemWithMarket.boostProps) &&
        Objects.equals(this.isLimitedTime, topBoostItemWithMarket.isLimitedTime) &&
        Objects.equals(this.boostMarket, topBoostItemWithMarket.boostMarket) &&
        Objects.equals(this.boostItemId, topBoostItemWithMarket.boostItemId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(boostTemplateName, boostTemplateId, eventName, sportName, catName, champName, eventId, eventDate, offerStartTime, offerEndTime, isEnabled, isTop, isMainPage, order, boostProps, isLimitedTime, boostMarket, boostItemId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TopBoostItemWithMarket {\n");
    sb.append("    boostTemplateName: ").append(toIndentedString(boostTemplateName)).append("\n");
    sb.append("    boostTemplateId: ").append(toIndentedString(boostTemplateId)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    sportName: ").append(toIndentedString(sportName)).append("\n");
    sb.append("    catName: ").append(toIndentedString(catName)).append("\n");
    sb.append("    champName: ").append(toIndentedString(champName)).append("\n");
    sb.append("    eventId: ").append(toIndentedString(eventId)).append("\n");
    sb.append("    eventDate: ").append(toIndentedString(eventDate)).append("\n");
    sb.append("    offerStartTime: ").append(toIndentedString(offerStartTime)).append("\n");
    sb.append("    offerEndTime: ").append(toIndentedString(offerEndTime)).append("\n");
    sb.append("    isEnabled: ").append(toIndentedString(isEnabled)).append("\n");
    sb.append("    isTop: ").append(toIndentedString(isTop)).append("\n");
    sb.append("    isMainPage: ").append(toIndentedString(isMainPage)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    boostProps: ").append(toIndentedString(boostProps)).append("\n");
    sb.append("    isLimitedTime: ").append(toIndentedString(isLimitedTime)).append("\n");
    sb.append("    boostMarket: ").append(toIndentedString(boostMarket)).append("\n");
    sb.append("    boostItemId: ").append(toIndentedString(boostItemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BoostTemplateName");
    openapiFields.add("BoostTemplateId");
    openapiFields.add("EventName");
    openapiFields.add("SportName");
    openapiFields.add("CatName");
    openapiFields.add("ChampName");
    openapiFields.add("EventId");
    openapiFields.add("EventDate");
    openapiFields.add("OfferStartTime");
    openapiFields.add("OfferEndTime");
    openapiFields.add("IsEnabled");
    openapiFields.add("IsTop");
    openapiFields.add("IsMainPage");
    openapiFields.add("Order");
    openapiFields.add("BoostProps");
    openapiFields.add("IsLimitedTime");
    openapiFields.add("BoostMarket");
    openapiFields.add("BoostItemId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to TopBoostItemWithMarket
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!TopBoostItemWithMarket.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in TopBoostItemWithMarket is not found in the empty JSON string", TopBoostItemWithMarket.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!TopBoostItemWithMarket.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `TopBoostItemWithMarket` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("BoostTemplateName") != null && !jsonObj.get("BoostTemplateName").isJsonNull()) && !jsonObj.get("BoostTemplateName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BoostTemplateName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BoostTemplateName").toString()));
      }
      if ((jsonObj.get("EventName") != null && !jsonObj.get("EventName").isJsonNull()) && !jsonObj.get("EventName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EventName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EventName").toString()));
      }
      if ((jsonObj.get("SportName") != null && !jsonObj.get("SportName").isJsonNull()) && !jsonObj.get("SportName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SportName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SportName").toString()));
      }
      if ((jsonObj.get("CatName") != null && !jsonObj.get("CatName").isJsonNull()) && !jsonObj.get("CatName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CatName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CatName").toString()));
      }
      if ((jsonObj.get("ChampName") != null && !jsonObj.get("ChampName").isJsonNull()) && !jsonObj.get("ChampName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChampName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChampName").toString()));
      }
      // validate the optional field `BoostProps`
      if (jsonObj.get("BoostProps") != null && !jsonObj.get("BoostProps").isJsonNull()) {
        BoostItemProps.validateJsonElement(jsonObj.get("BoostProps"));
      }
      // validate the optional field `BoostMarket`
      if (jsonObj.get("BoostMarket") != null && !jsonObj.get("BoostMarket").isJsonNull()) {
        BoostMarketDetails.validateJsonElement(jsonObj.get("BoostMarket"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!TopBoostItemWithMarket.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'TopBoostItemWithMarket' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<TopBoostItemWithMarket> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(TopBoostItemWithMarket.class));

       return (TypeAdapter<T>) new TypeAdapter<TopBoostItemWithMarket>() {
           @Override
           public void write(JsonWriter out, TopBoostItemWithMarket value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public TopBoostItemWithMarket read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of TopBoostItemWithMarket given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of TopBoostItemWithMarket
  * @throws IOException if the JSON string is invalid with respect to TopBoostItemWithMarket
  */
  public static TopBoostItemWithMarket fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, TopBoostItemWithMarket.class);
  }

 /**
  * Convert an instance of TopBoostItemWithMarket to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

