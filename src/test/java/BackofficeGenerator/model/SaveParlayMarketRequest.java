/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * SaveParlayMarketRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class SaveParlayMarketRequest {
  public static final String SERIALIZED_NAME_CONFIG_ID = "ConfigId";
  @SerializedName(SERIALIZED_NAME_CONFIG_ID)
  private Integer configId;

  public static final String SERIALIZED_NAME_SPORT_TYPE_ID = "SportTypeId";
  @SerializedName(SERIALIZED_NAME_SPORT_TYPE_ID)
  private Integer sportTypeId;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "ProductId";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private EventProducts productId;

  public static final String SERIALIZED_NAME_FIRST_MARKET_TYPE_ID = "FirstMarketTypeId";
  @SerializedName(SERIALIZED_NAME_FIRST_MARKET_TYPE_ID)
  private Integer firstMarketTypeId;

  public static final String SERIALIZED_NAME_SECOND_MARKET_TYPE_ID = "SecondMarketTypeId";
  @SerializedName(SERIALIZED_NAME_SECOND_MARKET_TYPE_ID)
  private Integer secondMarketTypeId;

  public static final String SERIALIZED_NAME_IS_FIRST_MARKET_MOST_BALANCED = "IsFirstMarketMostBalanced";
  @SerializedName(SERIALIZED_NAME_IS_FIRST_MARKET_MOST_BALANCED)
  private Boolean isFirstMarketMostBalanced;

  public static final String SERIALIZED_NAME_IS_SECOND_MARKET_MOST_BALANCED = "IsSecondMarketMostBalanced";
  @SerializedName(SERIALIZED_NAME_IS_SECOND_MARKET_MOST_BALANCED)
  private Boolean isSecondMarketMostBalanced;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public SaveParlayMarketRequest() {
  }

  public SaveParlayMarketRequest configId(Integer configId) {
    this.configId = configId;
    return this;
  }

   /**
   * Get configId
   * @return configId
  **/
  @javax.annotation.Nullable
  public Integer getConfigId() {
    return configId;
  }

  public void setConfigId(Integer configId) {
    this.configId = configId;
  }


  public SaveParlayMarketRequest sportTypeId(Integer sportTypeId) {
    this.sportTypeId = sportTypeId;
    return this;
  }

   /**
   * Get sportTypeId
   * @return sportTypeId
  **/
  @javax.annotation.Nullable
  public Integer getSportTypeId() {
    return sportTypeId;
  }

  public void setSportTypeId(Integer sportTypeId) {
    this.sportTypeId = sportTypeId;
  }


  public SaveParlayMarketRequest productId(EventProducts productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @javax.annotation.Nullable
  public EventProducts getProductId() {
    return productId;
  }

  public void setProductId(EventProducts productId) {
    this.productId = productId;
  }


  public SaveParlayMarketRequest firstMarketTypeId(Integer firstMarketTypeId) {
    this.firstMarketTypeId = firstMarketTypeId;
    return this;
  }

   /**
   * Get firstMarketTypeId
   * @return firstMarketTypeId
  **/
  @javax.annotation.Nullable
  public Integer getFirstMarketTypeId() {
    return firstMarketTypeId;
  }

  public void setFirstMarketTypeId(Integer firstMarketTypeId) {
    this.firstMarketTypeId = firstMarketTypeId;
  }


  public SaveParlayMarketRequest secondMarketTypeId(Integer secondMarketTypeId) {
    this.secondMarketTypeId = secondMarketTypeId;
    return this;
  }

   /**
   * Get secondMarketTypeId
   * @return secondMarketTypeId
  **/
  @javax.annotation.Nullable
  public Integer getSecondMarketTypeId() {
    return secondMarketTypeId;
  }

  public void setSecondMarketTypeId(Integer secondMarketTypeId) {
    this.secondMarketTypeId = secondMarketTypeId;
  }


  public SaveParlayMarketRequest isFirstMarketMostBalanced(Boolean isFirstMarketMostBalanced) {
    this.isFirstMarketMostBalanced = isFirstMarketMostBalanced;
    return this;
  }

   /**
   * Get isFirstMarketMostBalanced
   * @return isFirstMarketMostBalanced
  **/
  @javax.annotation.Nullable
  public Boolean getIsFirstMarketMostBalanced() {
    return isFirstMarketMostBalanced;
  }

  public void setIsFirstMarketMostBalanced(Boolean isFirstMarketMostBalanced) {
    this.isFirstMarketMostBalanced = isFirstMarketMostBalanced;
  }


  public SaveParlayMarketRequest isSecondMarketMostBalanced(Boolean isSecondMarketMostBalanced) {
    this.isSecondMarketMostBalanced = isSecondMarketMostBalanced;
    return this;
  }

   /**
   * Get isSecondMarketMostBalanced
   * @return isSecondMarketMostBalanced
  **/
  @javax.annotation.Nullable
  public Boolean getIsSecondMarketMostBalanced() {
    return isSecondMarketMostBalanced;
  }

  public void setIsSecondMarketMostBalanced(Boolean isSecondMarketMostBalanced) {
    this.isSecondMarketMostBalanced = isSecondMarketMostBalanced;
  }


  public SaveParlayMarketRequest id(Integer id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SaveParlayMarketRequest saveParlayMarketRequest = (SaveParlayMarketRequest) o;
    return Objects.equals(this.configId, saveParlayMarketRequest.configId) &&
        Objects.equals(this.sportTypeId, saveParlayMarketRequest.sportTypeId) &&
        Objects.equals(this.productId, saveParlayMarketRequest.productId) &&
        Objects.equals(this.firstMarketTypeId, saveParlayMarketRequest.firstMarketTypeId) &&
        Objects.equals(this.secondMarketTypeId, saveParlayMarketRequest.secondMarketTypeId) &&
        Objects.equals(this.isFirstMarketMostBalanced, saveParlayMarketRequest.isFirstMarketMostBalanced) &&
        Objects.equals(this.isSecondMarketMostBalanced, saveParlayMarketRequest.isSecondMarketMostBalanced) &&
        Objects.equals(this.id, saveParlayMarketRequest.id);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configId, sportTypeId, productId, firstMarketTypeId, secondMarketTypeId, isFirstMarketMostBalanced, isSecondMarketMostBalanced, id);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SaveParlayMarketRequest {\n");
    sb.append("    configId: ").append(toIndentedString(configId)).append("\n");
    sb.append("    sportTypeId: ").append(toIndentedString(sportTypeId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    firstMarketTypeId: ").append(toIndentedString(firstMarketTypeId)).append("\n");
    sb.append("    secondMarketTypeId: ").append(toIndentedString(secondMarketTypeId)).append("\n");
    sb.append("    isFirstMarketMostBalanced: ").append(toIndentedString(isFirstMarketMostBalanced)).append("\n");
    sb.append("    isSecondMarketMostBalanced: ").append(toIndentedString(isSecondMarketMostBalanced)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ConfigId");
    openapiFields.add("SportTypeId");
    openapiFields.add("ProductId");
    openapiFields.add("FirstMarketTypeId");
    openapiFields.add("SecondMarketTypeId");
    openapiFields.add("IsFirstMarketMostBalanced");
    openapiFields.add("IsSecondMarketMostBalanced");
    openapiFields.add("Id");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to SaveParlayMarketRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SaveParlayMarketRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SaveParlayMarketRequest is not found in the empty JSON string", SaveParlayMarketRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SaveParlayMarketRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SaveParlayMarketRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `ProductId`
      if (jsonObj.get("ProductId") != null && !jsonObj.get("ProductId").isJsonNull()) {
        EventProducts.validateJsonElement(jsonObj.get("ProductId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SaveParlayMarketRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SaveParlayMarketRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SaveParlayMarketRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SaveParlayMarketRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<SaveParlayMarketRequest>() {
           @Override
           public void write(JsonWriter out, SaveParlayMarketRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SaveParlayMarketRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SaveParlayMarketRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SaveParlayMarketRequest
  * @throws IOException if the JSON string is invalid with respect to SaveParlayMarketRequest
  */
  public static SaveParlayMarketRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SaveParlayMarketRequest.class);
  }

 /**
  * Convert an instance of SaveParlayMarketRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

