/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

import java.io.IOException;
import java.util.HashSet;
import java.util.Map;
import java.util.Objects;
import java.util.Set;

/**
 * UpdateGlobalTradingTemplateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class UpdateGlobalTradingTemplateRequest {
  public static final String SERIALIZED_NAME_TEMPLATE_ID = "TemplateId";
  @SerializedName(SERIALIZED_NAME_TEMPLATE_ID)
  private Integer templateId;

  public static final String SERIALIZED_NAME_STAKE_LIMIT = "StakeLimit";
  @SerializedName(SERIALIZED_NAME_STAKE_LIMIT)
  private Double stakeLimit;

  public static final String SERIALIZED_NAME_NET_WIN_LIMIT = "NetWinLimit";
  @SerializedName(SERIALIZED_NAME_NET_WIN_LIMIT)
  private Double netWinLimit;

  public static final String SERIALIZED_NAME_BB_MARGIN_SCHEME_ID = "BBMarginSchemeId";
  @SerializedName(SERIALIZED_NAME_BB_MARGIN_SCHEME_ID)
  private Integer bbMarginSchemeId;

  public static final String SERIALIZED_NAME_LADDER_TYPE = "LadderType";
  @SerializedName(SERIALIZED_NAME_LADDER_TYPE)
  private LadderTypes ladderType;

  public static final String SERIALIZED_NAME_LADDER_MAP2_WAY = "LadderMap2Way";
  @SerializedName(SERIALIZED_NAME_LADDER_MAP2_WAY)
  private Boolean ladderMap2Way;

  public static final String SERIALIZED_NAME_LADDER_MAP3_WAY = "LadderMap3Way";
  @SerializedName(SERIALIZED_NAME_LADDER_MAP3_WAY)
  private Boolean ladderMap3Way;

  public static final String SERIALIZED_NAME_PUBLICATION_TIME = "PublicationTime";
  @SerializedName(SERIALIZED_NAME_PUBLICATION_TIME)
  private Integer publicationTime;

  public static final String SERIALIZED_NAME_SPORT_ID = "SportId";
  @SerializedName(SERIALIZED_NAME_SPORT_ID)
  private Integer sportId;

  public UpdateGlobalTradingTemplateRequest() {
  }

  public UpdateGlobalTradingTemplateRequest templateId(Integer templateId) {
    this.templateId = templateId;
    return this;
  }

   /**
   * Get templateId
   * @return templateId
  **/
  @javax.annotation.Nullable
  public Integer getTemplateId() {
    return templateId;
  }

  public void setTemplateId(Integer templateId) {
    this.templateId = templateId;
  }


  public UpdateGlobalTradingTemplateRequest stakeLimit(Double stakeLimit) {
    this.stakeLimit = stakeLimit;
    return this;
  }

   /**
   * Get stakeLimit
   * @return stakeLimit
  **/
  @javax.annotation.Nullable
  public Double getStakeLimit() {
    return stakeLimit;
  }

  public void setStakeLimit(Double stakeLimit) {
    this.stakeLimit = stakeLimit;
  }


  public UpdateGlobalTradingTemplateRequest netWinLimit(Double netWinLimit) {
    this.netWinLimit = netWinLimit;
    return this;
  }

   /**
   * Get netWinLimit
   * @return netWinLimit
  **/
  @javax.annotation.Nullable
  public Double getNetWinLimit() {
    return netWinLimit;
  }

  public void setNetWinLimit(Double netWinLimit) {
    this.netWinLimit = netWinLimit;
  }


  public UpdateGlobalTradingTemplateRequest bbMarginSchemeId(Integer bbMarginSchemeId) {
    this.bbMarginSchemeId = bbMarginSchemeId;
    return this;
  }

   /**
   * Get bbMarginSchemeId
   * @return bbMarginSchemeId
  **/
  @javax.annotation.Nullable
  public Integer getBbMarginSchemeId() {
    return bbMarginSchemeId;
  }

  public void setBbMarginSchemeId(Integer bbMarginSchemeId) {
    this.bbMarginSchemeId = bbMarginSchemeId;
  }


  public UpdateGlobalTradingTemplateRequest ladderType(LadderTypes ladderType) {
    this.ladderType = ladderType;
    return this;
  }

   /**
   * Get ladderType
   * @return ladderType
  **/
  @javax.annotation.Nullable
  public LadderTypes getLadderType() {
    return ladderType;
  }

  public void setLadderType(LadderTypes ladderType) {
    this.ladderType = ladderType;
  }


  public UpdateGlobalTradingTemplateRequest ladderMap2Way(Boolean ladderMap2Way) {
    this.ladderMap2Way = ladderMap2Way;
    return this;
  }

   /**
   * Get ladderMap2Way
   * @return ladderMap2Way
  **/
  @javax.annotation.Nullable
  public Boolean getLadderMap2Way() {
    return ladderMap2Way;
  }

  public void setLadderMap2Way(Boolean ladderMap2Way) {
    this.ladderMap2Way = ladderMap2Way;
  }


  public UpdateGlobalTradingTemplateRequest ladderMap3Way(Boolean ladderMap3Way) {
    this.ladderMap3Way = ladderMap3Way;
    return this;
  }

   /**
   * Get ladderMap3Way
   * @return ladderMap3Way
  **/
  @javax.annotation.Nullable
  public Boolean getLadderMap3Way() {
    return ladderMap3Way;
  }

  public void setLadderMap3Way(Boolean ladderMap3Way) {
    this.ladderMap3Way = ladderMap3Way;
  }


  public UpdateGlobalTradingTemplateRequest publicationTime(Integer publicationTime) {
    this.publicationTime = publicationTime;
    return this;
  }

   /**
   * Get publicationTime
   * @return publicationTime
  **/
  @javax.annotation.Nullable
  public Integer getPublicationTime() {
    return publicationTime;
  }

  public void setPublicationTime(Integer publicationTime) {
    this.publicationTime = publicationTime;
  }


  public UpdateGlobalTradingTemplateRequest sportId(Integer sportId) {
    this.sportId = sportId;
    return this;
  }

   /**
   * Get sportId
   * @return sportId
  **/
  @javax.annotation.Nullable
  public Integer getSportId() {
    return sportId;
  }

  public void setSportId(Integer sportId) {
    this.sportId = sportId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateGlobalTradingTemplateRequest updateGlobalTradingTemplateRequest = (UpdateGlobalTradingTemplateRequest) o;
    return Objects.equals(this.templateId, updateGlobalTradingTemplateRequest.templateId) &&
        Objects.equals(this.stakeLimit, updateGlobalTradingTemplateRequest.stakeLimit) &&
        Objects.equals(this.netWinLimit, updateGlobalTradingTemplateRequest.netWinLimit) &&
        Objects.equals(this.bbMarginSchemeId, updateGlobalTradingTemplateRequest.bbMarginSchemeId) &&
        Objects.equals(this.ladderType, updateGlobalTradingTemplateRequest.ladderType) &&
        Objects.equals(this.ladderMap2Way, updateGlobalTradingTemplateRequest.ladderMap2Way) &&
        Objects.equals(this.ladderMap3Way, updateGlobalTradingTemplateRequest.ladderMap3Way) &&
        Objects.equals(this.publicationTime, updateGlobalTradingTemplateRequest.publicationTime) &&
        Objects.equals(this.sportId, updateGlobalTradingTemplateRequest.sportId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(templateId, stakeLimit, netWinLimit, bbMarginSchemeId, ladderType, ladderMap2Way, ladderMap3Way, publicationTime, sportId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateGlobalTradingTemplateRequest {\n");
    sb.append("    templateId: ").append(toIndentedString(templateId)).append("\n");
    sb.append("    stakeLimit: ").append(toIndentedString(stakeLimit)).append("\n");
    sb.append("    netWinLimit: ").append(toIndentedString(netWinLimit)).append("\n");
    sb.append("    bbMarginSchemeId: ").append(toIndentedString(bbMarginSchemeId)).append("\n");
    sb.append("    ladderType: ").append(toIndentedString(ladderType)).append("\n");
    sb.append("    ladderMap2Way: ").append(toIndentedString(ladderMap2Way)).append("\n");
    sb.append("    ladderMap3Way: ").append(toIndentedString(ladderMap3Way)).append("\n");
    sb.append("    publicationTime: ").append(toIndentedString(publicationTime)).append("\n");
    sb.append("    sportId: ").append(toIndentedString(sportId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("TemplateId");
    openapiFields.add("StakeLimit");
    openapiFields.add("NetWinLimit");
    openapiFields.add("BBMarginSchemeId");
    openapiFields.add("LadderType");
    openapiFields.add("LadderMap2Way");
    openapiFields.add("LadderMap3Way");
    openapiFields.add("PublicationTime");
    openapiFields.add("SportId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to UpdateGlobalTradingTemplateRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateGlobalTradingTemplateRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateGlobalTradingTemplateRequest is not found in the empty JSON string", UpdateGlobalTradingTemplateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateGlobalTradingTemplateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateGlobalTradingTemplateRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `LadderType`
      if (jsonObj.get("LadderType") != null && !jsonObj.get("LadderType").isJsonNull()) {
        LadderTypes.validateJsonElement(jsonObj.get("LadderType"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateGlobalTradingTemplateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateGlobalTradingTemplateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateGlobalTradingTemplateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateGlobalTradingTemplateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateGlobalTradingTemplateRequest>() {
           @Override
           public void write(JsonWriter out, UpdateGlobalTradingTemplateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateGlobalTradingTemplateRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of UpdateGlobalTradingTemplateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of UpdateGlobalTradingTemplateRequest
  * @throws IOException if the JSON string is invalid with respect to UpdateGlobalTradingTemplateRequest
  */
  public static UpdateGlobalTradingTemplateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateGlobalTradingTemplateRequest.class);
  }

 /**
  * Convert an instance of UpdateGlobalTradingTemplateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

