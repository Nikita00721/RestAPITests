/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;

/**
 * AamsMarketRefundInfo
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class AamsMarketRefundInfo {
  public static final String SERIALIZED_NAME_OPERATOR_NAME = "OperatorName";
  @SerializedName(SERIALIZED_NAME_OPERATOR_NAME)
  private String operatorName;

  public static final String SERIALIZED_NAME_INT_EVENT_ID = "IntEventId";
  @SerializedName(SERIALIZED_NAME_INT_EVENT_ID)
  private Long intEventId;

  public static final String SERIALIZED_NAME_FEED_MARKET_ID = "FeedMarketId";
  @SerializedName(SERIALIZED_NAME_FEED_MARKET_ID)
  private Long feedMarketId;

  public static final String SERIALIZED_NAME_MARKET_NAME = "MarketName";
  @SerializedName(SERIALIZED_NAME_MARKET_NAME)
  private String marketName;

  public static final String SERIALIZED_NAME_EXT_MARKET_ID = "ExtMarketId";
  @SerializedName(SERIALIZED_NAME_EXT_MARKET_ID)
  private Long extMarketId;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_PROCESSED_MESSAGE = "ProcessedMessage";
  @SerializedName(SERIALIZED_NAME_PROCESSED_MESSAGE)
  private String processedMessage;

  public static final String SERIALIZED_NAME_PROCESSED_STATUS = "ProcessedStatus";
  @SerializedName(SERIALIZED_NAME_PROCESSED_STATUS)
  private Integer processedStatus;

  public static final String SERIALIZED_NAME_PROCESSED_STATUS_NAME = "ProcessedStatusName";
  @SerializedName(SERIALIZED_NAME_PROCESSED_STATUS_NAME)
  private String processedStatusName;

  public static final String SERIALIZED_NAME_OPERATOR_ID = "OperatorId";
  @SerializedName(SERIALIZED_NAME_OPERATOR_ID)
  private Integer operatorId;

  public AamsMarketRefundInfo() {
  }

  public AamsMarketRefundInfo operatorName(String operatorName) {
    this.operatorName = operatorName;
    return this;
  }

   /**
   * Get operatorName
   * @return operatorName
  **/
  @javax.annotation.Nullable
  public String getOperatorName() {
    return operatorName;
  }

  public void setOperatorName(String operatorName) {
    this.operatorName = operatorName;
  }


  public AamsMarketRefundInfo intEventId(Long intEventId) {
    this.intEventId = intEventId;
    return this;
  }

   /**
   * Get intEventId
   * @return intEventId
  **/
  @javax.annotation.Nullable
  public Long getIntEventId() {
    return intEventId;
  }

  public void setIntEventId(Long intEventId) {
    this.intEventId = intEventId;
  }


  public AamsMarketRefundInfo feedMarketId(Long feedMarketId) {
    this.feedMarketId = feedMarketId;
    return this;
  }

   /**
   * Get feedMarketId
   * @return feedMarketId
  **/
  @javax.annotation.Nullable
  public Long getFeedMarketId() {
    return feedMarketId;
  }

  public void setFeedMarketId(Long feedMarketId) {
    this.feedMarketId = feedMarketId;
  }


  public AamsMarketRefundInfo marketName(String marketName) {
    this.marketName = marketName;
    return this;
  }

   /**
   * Get marketName
   * @return marketName
  **/
  @javax.annotation.Nullable
  public String getMarketName() {
    return marketName;
  }

  public void setMarketName(String marketName) {
    this.marketName = marketName;
  }


  public AamsMarketRefundInfo extMarketId(Long extMarketId) {
    this.extMarketId = extMarketId;
    return this;
  }

   /**
   * Get extMarketId
   * @return extMarketId
  **/
  @javax.annotation.Nullable
  public Long getExtMarketId() {
    return extMarketId;
  }

  public void setExtMarketId(Long extMarketId) {
    this.extMarketId = extMarketId;
  }


  public AamsMarketRefundInfo startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public AamsMarketRefundInfo endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public AamsMarketRefundInfo processedMessage(String processedMessage) {
    this.processedMessage = processedMessage;
    return this;
  }

   /**
   * Get processedMessage
   * @return processedMessage
  **/
  @javax.annotation.Nullable
  public String getProcessedMessage() {
    return processedMessage;
  }

  public void setProcessedMessage(String processedMessage) {
    this.processedMessage = processedMessage;
  }


  public AamsMarketRefundInfo processedStatus(Integer processedStatus) {
    this.processedStatus = processedStatus;
    return this;
  }

   /**
   * Get processedStatus
   * @return processedStatus
  **/
  @javax.annotation.Nullable
  public Integer getProcessedStatus() {
    return processedStatus;
  }

  public void setProcessedStatus(Integer processedStatus) {
    this.processedStatus = processedStatus;
  }


  public AamsMarketRefundInfo processedStatusName(String processedStatusName) {
    this.processedStatusName = processedStatusName;
    return this;
  }

   /**
   * Get processedStatusName
   * @return processedStatusName
  **/
  @javax.annotation.Nullable
  public String getProcessedStatusName() {
    return processedStatusName;
  }

  public void setProcessedStatusName(String processedStatusName) {
    this.processedStatusName = processedStatusName;
  }


  public AamsMarketRefundInfo operatorId(Integer operatorId) {
    this.operatorId = operatorId;
    return this;
  }

   /**
   * Get operatorId
   * @return operatorId
  **/
  @javax.annotation.Nullable
  public Integer getOperatorId() {
    return operatorId;
  }

  public void setOperatorId(Integer operatorId) {
    this.operatorId = operatorId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AamsMarketRefundInfo aamsMarketRefundInfo = (AamsMarketRefundInfo) o;
    return Objects.equals(this.operatorName, aamsMarketRefundInfo.operatorName) &&
        Objects.equals(this.intEventId, aamsMarketRefundInfo.intEventId) &&
        Objects.equals(this.feedMarketId, aamsMarketRefundInfo.feedMarketId) &&
        Objects.equals(this.marketName, aamsMarketRefundInfo.marketName) &&
        Objects.equals(this.extMarketId, aamsMarketRefundInfo.extMarketId) &&
        Objects.equals(this.startDate, aamsMarketRefundInfo.startDate) &&
        Objects.equals(this.endDate, aamsMarketRefundInfo.endDate) &&
        Objects.equals(this.processedMessage, aamsMarketRefundInfo.processedMessage) &&
        Objects.equals(this.processedStatus, aamsMarketRefundInfo.processedStatus) &&
        Objects.equals(this.processedStatusName, aamsMarketRefundInfo.processedStatusName) &&
        Objects.equals(this.operatorId, aamsMarketRefundInfo.operatorId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(operatorName, intEventId, feedMarketId, marketName, extMarketId, startDate, endDate, processedMessage, processedStatus, processedStatusName, operatorId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AamsMarketRefundInfo {\n");
    sb.append("    operatorName: ").append(toIndentedString(operatorName)).append("\n");
    sb.append("    intEventId: ").append(toIndentedString(intEventId)).append("\n");
    sb.append("    feedMarketId: ").append(toIndentedString(feedMarketId)).append("\n");
    sb.append("    marketName: ").append(toIndentedString(marketName)).append("\n");
    sb.append("    extMarketId: ").append(toIndentedString(extMarketId)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    processedMessage: ").append(toIndentedString(processedMessage)).append("\n");
    sb.append("    processedStatus: ").append(toIndentedString(processedStatus)).append("\n");
    sb.append("    processedStatusName: ").append(toIndentedString(processedStatusName)).append("\n");
    sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OperatorName");
    openapiFields.add("IntEventId");
    openapiFields.add("FeedMarketId");
    openapiFields.add("MarketName");
    openapiFields.add("ExtMarketId");
    openapiFields.add("StartDate");
    openapiFields.add("EndDate");
    openapiFields.add("ProcessedMessage");
    openapiFields.add("ProcessedStatus");
    openapiFields.add("ProcessedStatusName");
    openapiFields.add("OperatorId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AamsMarketRefundInfo
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AamsMarketRefundInfo.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AamsMarketRefundInfo is not found in the empty JSON string", AamsMarketRefundInfo.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AamsMarketRefundInfo.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AamsMarketRefundInfo` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("OperatorName") != null && !jsonObj.get("OperatorName").isJsonNull()) && !jsonObj.get("OperatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OperatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OperatorName").toString()));
      }
      if ((jsonObj.get("MarketName") != null && !jsonObj.get("MarketName").isJsonNull()) && !jsonObj.get("MarketName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MarketName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MarketName").toString()));
      }
      if ((jsonObj.get("ProcessedMessage") != null && !jsonObj.get("ProcessedMessage").isJsonNull()) && !jsonObj.get("ProcessedMessage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProcessedMessage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProcessedMessage").toString()));
      }
      if ((jsonObj.get("ProcessedStatusName") != null && !jsonObj.get("ProcessedStatusName").isJsonNull()) && !jsonObj.get("ProcessedStatusName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProcessedStatusName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProcessedStatusName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AamsMarketRefundInfo.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AamsMarketRefundInfo' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AamsMarketRefundInfo> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AamsMarketRefundInfo.class));

       return (TypeAdapter<T>) new TypeAdapter<AamsMarketRefundInfo>() {
           @Override
           public void write(JsonWriter out, AamsMarketRefundInfo value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AamsMarketRefundInfo read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AamsMarketRefundInfo given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AamsMarketRefundInfo
  * @throws IOException if the JSON string is invalid with respect to AamsMarketRefundInfo
  */
  public static AamsMarketRefundInfo fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AamsMarketRefundInfo.class);
  }

 /**
  * Convert an instance of AamsMarketRefundInfo to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

