/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;

/**
 * GetZeroMarginEventsRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class GetZeroMarginEventsRequest {
  public static final String SERIALIZED_NAME_SEARCH_ID_NAME = "SearchIdName";
  @SerializedName(SERIALIZED_NAME_SEARCH_ID_NAME)
  private String searchIdName;

  public static final String SERIALIZED_NAME_DATE_FROM = "DateFrom";
  @SerializedName(SERIALIZED_NAME_DATE_FROM)
  private OffsetDateTime dateFrom;

  public static final String SERIALIZED_NAME_DATE_TO = "DateTo";
  @SerializedName(SERIALIZED_NAME_DATE_TO)
  private OffsetDateTime dateTo;

  public static final String SERIALIZED_NAME_TIMEZONE = "Timezone";
  @SerializedName(SERIALIZED_NAME_TIMEZONE)
  private TimeOffsets timezone;

  public static final String SERIALIZED_NAME_CONFIG_ID = "ConfigId";
  @SerializedName(SERIALIZED_NAME_CONFIG_ID)
  private Integer configId;

  public static final String SERIALIZED_NAME_CHAMPIONSHIP_ID = "ChampionshipId";
  @SerializedName(SERIALIZED_NAME_CHAMPIONSHIP_ID)
  private Integer championshipId;

  public GetZeroMarginEventsRequest() {
  }

  public GetZeroMarginEventsRequest searchIdName(String searchIdName) {
    this.searchIdName = searchIdName;
    return this;
  }

   /**
   * Get searchIdName
   * @return searchIdName
  **/
  @javax.annotation.Nullable
  public String getSearchIdName() {
    return searchIdName;
  }

  public void setSearchIdName(String searchIdName) {
    this.searchIdName = searchIdName;
  }


  public GetZeroMarginEventsRequest dateFrom(OffsetDateTime dateFrom) {
    this.dateFrom = dateFrom;
    return this;
  }

   /**
   * Get dateFrom
   * @return dateFrom
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getDateFrom() {
    return dateFrom;
  }

  public void setDateFrom(OffsetDateTime dateFrom) {
    this.dateFrom = dateFrom;
  }


  public GetZeroMarginEventsRequest dateTo(OffsetDateTime dateTo) {
    this.dateTo = dateTo;
    return this;
  }

   /**
   * Get dateTo
   * @return dateTo
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getDateTo() {
    return dateTo;
  }

  public void setDateTo(OffsetDateTime dateTo) {
    this.dateTo = dateTo;
  }


  public GetZeroMarginEventsRequest timezone(TimeOffsets timezone) {
    this.timezone = timezone;
    return this;
  }

   /**
   * Get timezone
   * @return timezone
  **/
  @javax.annotation.Nullable
  public TimeOffsets getTimezone() {
    return timezone;
  }

  public void setTimezone(TimeOffsets timezone) {
    this.timezone = timezone;
  }


  public GetZeroMarginEventsRequest configId(Integer configId) {
    this.configId = configId;
    return this;
  }

   /**
   * Get configId
   * @return configId
  **/
  @javax.annotation.Nullable
  public Integer getConfigId() {
    return configId;
  }

  public void setConfigId(Integer configId) {
    this.configId = configId;
  }


  public GetZeroMarginEventsRequest championshipId(Integer championshipId) {
    this.championshipId = championshipId;
    return this;
  }

   /**
   * Get championshipId
   * @return championshipId
  **/
  @javax.annotation.Nullable
  public Integer getChampionshipId() {
    return championshipId;
  }

  public void setChampionshipId(Integer championshipId) {
    this.championshipId = championshipId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetZeroMarginEventsRequest getZeroMarginEventsRequest = (GetZeroMarginEventsRequest) o;
    return Objects.equals(this.searchIdName, getZeroMarginEventsRequest.searchIdName) &&
        Objects.equals(this.dateFrom, getZeroMarginEventsRequest.dateFrom) &&
        Objects.equals(this.dateTo, getZeroMarginEventsRequest.dateTo) &&
        Objects.equals(this.timezone, getZeroMarginEventsRequest.timezone) &&
        Objects.equals(this.configId, getZeroMarginEventsRequest.configId) &&
        Objects.equals(this.championshipId, getZeroMarginEventsRequest.championshipId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(searchIdName, dateFrom, dateTo, timezone, configId, championshipId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetZeroMarginEventsRequest {\n");
    sb.append("    searchIdName: ").append(toIndentedString(searchIdName)).append("\n");
    sb.append("    dateFrom: ").append(toIndentedString(dateFrom)).append("\n");
    sb.append("    dateTo: ").append(toIndentedString(dateTo)).append("\n");
    sb.append("    timezone: ").append(toIndentedString(timezone)).append("\n");
    sb.append("    configId: ").append(toIndentedString(configId)).append("\n");
    sb.append("    championshipId: ").append(toIndentedString(championshipId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("SearchIdName");
    openapiFields.add("DateFrom");
    openapiFields.add("DateTo");
    openapiFields.add("Timezone");
    openapiFields.add("ConfigId");
    openapiFields.add("ChampionshipId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to GetZeroMarginEventsRequest
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetZeroMarginEventsRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetZeroMarginEventsRequest is not found in the empty JSON string", GetZeroMarginEventsRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetZeroMarginEventsRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetZeroMarginEventsRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("SearchIdName") != null && !jsonObj.get("SearchIdName").isJsonNull()) && !jsonObj.get("SearchIdName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SearchIdName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SearchIdName").toString()));
      }
      // validate the optional field `Timezone`
      if (jsonObj.get("Timezone") != null && !jsonObj.get("Timezone").isJsonNull()) {
        TimeOffsets.validateJsonElement(jsonObj.get("Timezone"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetZeroMarginEventsRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetZeroMarginEventsRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetZeroMarginEventsRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetZeroMarginEventsRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GetZeroMarginEventsRequest>() {
           @Override
           public void write(JsonWriter out, GetZeroMarginEventsRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetZeroMarginEventsRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of GetZeroMarginEventsRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of GetZeroMarginEventsRequest
  * @throws IOException if the JSON string is invalid with respect to GetZeroMarginEventsRequest
  */
  public static GetZeroMarginEventsRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetZeroMarginEventsRequest.class);
  }

 /**
  * Convert an instance of GetZeroMarginEventsRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

