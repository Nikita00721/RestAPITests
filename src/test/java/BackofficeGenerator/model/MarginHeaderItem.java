/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.util.*;

/**
 * MarginHeaderItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class MarginHeaderItem {
  public static final String SERIALIZED_NAME_MARGIN_RULE_ID = "MarginRuleId";
  @SerializedName(SERIALIZED_NAME_MARGIN_RULE_ID)
  private MarginRules marginRuleId;

  public static final String SERIALIZED_NAME_KEY = "Key";
  @SerializedName(SERIALIZED_NAME_KEY)
  private Double key;

  public static final String SERIALIZED_NAME_MAX_LINES = "MaxLines";
  @SerializedName(SERIALIZED_NAME_MAX_LINES)
  private Integer maxLines;

  public static final String SERIALIZED_NAME_TIME_LIMIT_FACTOR = "TimeLimitFactor";
  @SerializedName(SERIALIZED_NAME_TIME_LIMIT_FACTOR)
  private Double timeLimitFactor;

  public static final String SERIALIZED_NAME_MARGIN_ADJUSTMENT_APPLIED = "MarginAdjustmentApplied";
  @SerializedName(SERIALIZED_NAME_MARGIN_ADJUSTMENT_APPLIED)
  private Boolean marginAdjustmentApplied;

  public static final String SERIALIZED_NAME_TIMELINE = "Timeline";
  @SerializedName(SERIALIZED_NAME_TIMELINE)
  private Integer timeline;

  public MarginHeaderItem() {
  }

  public MarginHeaderItem marginRuleId(MarginRules marginRuleId) {
    this.marginRuleId = marginRuleId;
    return this;
  }

   /**
   * Get marginRuleId
   * @return marginRuleId
  **/
  @javax.annotation.Nullable
  public MarginRules getMarginRuleId() {
    return marginRuleId;
  }

  public void setMarginRuleId(MarginRules marginRuleId) {
    this.marginRuleId = marginRuleId;
  }


  public MarginHeaderItem key(Double key) {
    this.key = key;
    return this;
  }

   /**
   * Get key
   * @return key
  **/
  @javax.annotation.Nullable
  public Double getKey() {
    return key;
  }

  public void setKey(Double key) {
    this.key = key;
  }


  public MarginHeaderItem maxLines(Integer maxLines) {
    this.maxLines = maxLines;
    return this;
  }

   /**
   * Get maxLines
   * @return maxLines
  **/
  @javax.annotation.Nullable
  public Integer getMaxLines() {
    return maxLines;
  }

  public void setMaxLines(Integer maxLines) {
    this.maxLines = maxLines;
  }


  public MarginHeaderItem timeLimitFactor(Double timeLimitFactor) {
    this.timeLimitFactor = timeLimitFactor;
    return this;
  }

   /**
   * Get timeLimitFactor
   * @return timeLimitFactor
  **/
  @javax.annotation.Nullable
  public Double getTimeLimitFactor() {
    return timeLimitFactor;
  }

  public void setTimeLimitFactor(Double timeLimitFactor) {
    this.timeLimitFactor = timeLimitFactor;
  }


  public MarginHeaderItem marginAdjustmentApplied(Boolean marginAdjustmentApplied) {
    this.marginAdjustmentApplied = marginAdjustmentApplied;
    return this;
  }

   /**
   * Get marginAdjustmentApplied
   * @return marginAdjustmentApplied
  **/
  @javax.annotation.Nullable
  public Boolean getMarginAdjustmentApplied() {
    return marginAdjustmentApplied;
  }

  public void setMarginAdjustmentApplied(Boolean marginAdjustmentApplied) {
    this.marginAdjustmentApplied = marginAdjustmentApplied;
  }


  public MarginHeaderItem timeline(Integer timeline) {
    this.timeline = timeline;
    return this;
  }

   /**
   * Get timeline
   * @return timeline
  **/
  @javax.annotation.Nullable
  public Integer getTimeline() {
    return timeline;
  }

  public void setTimeline(Integer timeline) {
    this.timeline = timeline;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarginHeaderItem marginHeaderItem = (MarginHeaderItem) o;
    return Objects.equals(this.marginRuleId, marginHeaderItem.marginRuleId) &&
        Objects.equals(this.key, marginHeaderItem.key) &&
        Objects.equals(this.maxLines, marginHeaderItem.maxLines) &&
        Objects.equals(this.timeLimitFactor, marginHeaderItem.timeLimitFactor) &&
        Objects.equals(this.marginAdjustmentApplied, marginHeaderItem.marginAdjustmentApplied) &&
        Objects.equals(this.timeline, marginHeaderItem.timeline);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(marginRuleId, key, maxLines, timeLimitFactor, marginAdjustmentApplied, timeline);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarginHeaderItem {\n");
    sb.append("    marginRuleId: ").append(toIndentedString(marginRuleId)).append("\n");
    sb.append("    key: ").append(toIndentedString(key)).append("\n");
    sb.append("    maxLines: ").append(toIndentedString(maxLines)).append("\n");
    sb.append("    timeLimitFactor: ").append(toIndentedString(timeLimitFactor)).append("\n");
    sb.append("    marginAdjustmentApplied: ").append(toIndentedString(marginAdjustmentApplied)).append("\n");
    sb.append("    timeline: ").append(toIndentedString(timeline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MarginRuleId");
    openapiFields.add("Key");
    openapiFields.add("MaxLines");
    openapiFields.add("TimeLimitFactor");
    openapiFields.add("MarginAdjustmentApplied");
    openapiFields.add("Timeline");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to MarginHeaderItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MarginHeaderItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MarginHeaderItem is not found in the empty JSON string", MarginHeaderItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MarginHeaderItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MarginHeaderItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MarginRuleId`
      if (jsonObj.get("MarginRuleId") != null && !jsonObj.get("MarginRuleId").isJsonNull()) {
        MarginRules.validateJsonElement(jsonObj.get("MarginRuleId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MarginHeaderItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MarginHeaderItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MarginHeaderItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MarginHeaderItem.class));

       return (TypeAdapter<T>) new TypeAdapter<MarginHeaderItem>() {
           @Override
           public void write(JsonWriter out, MarginHeaderItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MarginHeaderItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MarginHeaderItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MarginHeaderItem
  * @throws IOException if the JSON string is invalid with respect to MarginHeaderItem
  */
  public static MarginHeaderItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MarginHeaderItem.class);
  }

 /**
  * Convert an instance of MarginHeaderItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

