/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.util.*;

/**
 * BoostMarketDetails
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class BoostMarketDetails {
  public static final String SERIALIZED_NAME_FM_CONFIG_ID = "FMConfigId";
  @SerializedName(SERIALIZED_NAME_FM_CONFIG_ID)
  private Integer fmConfigId;

  public static final String SERIALIZED_NAME_MARKET_TYPE_NAME = "MarketTypeName";
  @SerializedName(SERIALIZED_NAME_MARKET_TYPE_NAME)
  private String marketTypeName;

  public static final String SERIALIZED_NAME_SELECTION_TYPE_NAME = "SelectionTypeName";
  @SerializedName(SERIALIZED_NAME_SELECTION_TYPE_NAME)
  private String selectionTypeName;

  public static final String SERIALIZED_NAME_MARKET_NAME = "MarketName";
  @SerializedName(SERIALIZED_NAME_MARKET_NAME)
  private String marketName;

  public static final String SERIALIZED_NAME_SELECTION_NAME = "SelectionName";
  @SerializedName(SERIALIZED_NAME_SELECTION_NAME)
  private String selectionName;

  public static final String SERIALIZED_NAME_SPECIAL_ODDS_VALUE = "SpecialOddsValue";
  @SerializedName(SERIALIZED_NAME_SPECIAL_ODDS_VALUE)
  private String specialOddsValue;

  public static final String SERIALIZED_NAME_SELECTION_ID = "SelectionId";
  @SerializedName(SERIALIZED_NAME_SELECTION_ID)
  private Long selectionId;

  public static final String SERIALIZED_NAME_LADDER_TYPE_ID = "LadderTypeId";
  @SerializedName(SERIALIZED_NAME_LADDER_TYPE_ID)
  private LadderTypes ladderTypeId;

  public static final String SERIALIZED_NAME_MARKET_TYPE_ID = "MarketTypeId";
  @SerializedName(SERIALIZED_NAME_MARKET_TYPE_ID)
  private Integer marketTypeId;

  public static final String SERIALIZED_NAME_SELECTION_TYPE_ID = "SelectionTypeId";
  @SerializedName(SERIALIZED_NAME_SELECTION_TYPE_ID)
  private Integer selectionTypeId;

  public static final String SERIALIZED_NAME_BRAND_PRICE_MONGO = "BrandPriceMongo";
  @SerializedName(SERIALIZED_NAME_BRAND_PRICE_MONGO)
  private Double brandPriceMongo;

  public static final String SERIALIZED_NAME_BOOST_PRICE_MONGO = "BoostPriceMongo";
  @SerializedName(SERIALIZED_NAME_BOOST_PRICE_MONGO)
  private Double boostPriceMongo;

  public static final String SERIALIZED_NAME_BOOST_ITEM_ID = "BoostItemId";
  @SerializedName(SERIALIZED_NAME_BOOST_ITEM_ID)
  private Integer boostItemId;

  public BoostMarketDetails() {
  }

  public BoostMarketDetails fmConfigId(Integer fmConfigId) {
    this.fmConfigId = fmConfigId;
    return this;
  }

   /**
   * Get fmConfigId
   * @return fmConfigId
  **/
  @javax.annotation.Nullable
  public Integer getFmConfigId() {
    return fmConfigId;
  }

  public void setFmConfigId(Integer fmConfigId) {
    this.fmConfigId = fmConfigId;
  }


  public BoostMarketDetails marketTypeName(String marketTypeName) {
    this.marketTypeName = marketTypeName;
    return this;
  }

   /**
   * Get marketTypeName
   * @return marketTypeName
  **/
  @javax.annotation.Nullable
  public String getMarketTypeName() {
    return marketTypeName;
  }

  public void setMarketTypeName(String marketTypeName) {
    this.marketTypeName = marketTypeName;
  }


  public BoostMarketDetails selectionTypeName(String selectionTypeName) {
    this.selectionTypeName = selectionTypeName;
    return this;
  }

   /**
   * Get selectionTypeName
   * @return selectionTypeName
  **/
  @javax.annotation.Nullable
  public String getSelectionTypeName() {
    return selectionTypeName;
  }

  public void setSelectionTypeName(String selectionTypeName) {
    this.selectionTypeName = selectionTypeName;
  }


  public BoostMarketDetails marketName(String marketName) {
    this.marketName = marketName;
    return this;
  }

   /**
   * Get marketName
   * @return marketName
  **/
  @javax.annotation.Nullable
  public String getMarketName() {
    return marketName;
  }

  public void setMarketName(String marketName) {
    this.marketName = marketName;
  }


  public BoostMarketDetails selectionName(String selectionName) {
    this.selectionName = selectionName;
    return this;
  }

   /**
   * Get selectionName
   * @return selectionName
  **/
  @javax.annotation.Nullable
  public String getSelectionName() {
    return selectionName;
  }

  public void setSelectionName(String selectionName) {
    this.selectionName = selectionName;
  }


  public BoostMarketDetails specialOddsValue(String specialOddsValue) {
    this.specialOddsValue = specialOddsValue;
    return this;
  }

   /**
   * Get specialOddsValue
   * @return specialOddsValue
  **/
  @javax.annotation.Nullable
  public String getSpecialOddsValue() {
    return specialOddsValue;
  }

  public void setSpecialOddsValue(String specialOddsValue) {
    this.specialOddsValue = specialOddsValue;
  }


  public BoostMarketDetails selectionId(Long selectionId) {
    this.selectionId = selectionId;
    return this;
  }

   /**
   * Get selectionId
   * @return selectionId
  **/
  @javax.annotation.Nullable
  public Long getSelectionId() {
    return selectionId;
  }

  public void setSelectionId(Long selectionId) {
    this.selectionId = selectionId;
  }


  public BoostMarketDetails ladderTypeId(LadderTypes ladderTypeId) {
    this.ladderTypeId = ladderTypeId;
    return this;
  }

   /**
   * Get ladderTypeId
   * @return ladderTypeId
  **/
  @javax.annotation.Nullable
  public LadderTypes getLadderTypeId() {
    return ladderTypeId;
  }

  public void setLadderTypeId(LadderTypes ladderTypeId) {
    this.ladderTypeId = ladderTypeId;
  }


  public BoostMarketDetails marketTypeId(Integer marketTypeId) {
    this.marketTypeId = marketTypeId;
    return this;
  }

   /**
   * Get marketTypeId
   * @return marketTypeId
  **/
  @javax.annotation.Nullable
  public Integer getMarketTypeId() {
    return marketTypeId;
  }

  public void setMarketTypeId(Integer marketTypeId) {
    this.marketTypeId = marketTypeId;
  }


  public BoostMarketDetails selectionTypeId(Integer selectionTypeId) {
    this.selectionTypeId = selectionTypeId;
    return this;
  }

   /**
   * Get selectionTypeId
   * @return selectionTypeId
  **/
  @javax.annotation.Nullable
  public Integer getSelectionTypeId() {
    return selectionTypeId;
  }

  public void setSelectionTypeId(Integer selectionTypeId) {
    this.selectionTypeId = selectionTypeId;
  }


  public BoostMarketDetails brandPriceMongo(Double brandPriceMongo) {
    this.brandPriceMongo = brandPriceMongo;
    return this;
  }

   /**
   * Get brandPriceMongo
   * @return brandPriceMongo
  **/
  @javax.annotation.Nullable
  public Double getBrandPriceMongo() {
    return brandPriceMongo;
  }

  public void setBrandPriceMongo(Double brandPriceMongo) {
    this.brandPriceMongo = brandPriceMongo;
  }


  public BoostMarketDetails boostPriceMongo(Double boostPriceMongo) {
    this.boostPriceMongo = boostPriceMongo;
    return this;
  }

   /**
   * Get boostPriceMongo
   * @return boostPriceMongo
  **/
  @javax.annotation.Nullable
  public Double getBoostPriceMongo() {
    return boostPriceMongo;
  }

  public void setBoostPriceMongo(Double boostPriceMongo) {
    this.boostPriceMongo = boostPriceMongo;
  }


  public BoostMarketDetails boostItemId(Integer boostItemId) {
    this.boostItemId = boostItemId;
    return this;
  }

   /**
   * Get boostItemId
   * @return boostItemId
  **/
  @javax.annotation.Nullable
  public Integer getBoostItemId() {
    return boostItemId;
  }

  public void setBoostItemId(Integer boostItemId) {
    this.boostItemId = boostItemId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BoostMarketDetails boostMarketDetails = (BoostMarketDetails) o;
    return Objects.equals(this.fmConfigId, boostMarketDetails.fmConfigId) &&
        Objects.equals(this.marketTypeName, boostMarketDetails.marketTypeName) &&
        Objects.equals(this.selectionTypeName, boostMarketDetails.selectionTypeName) &&
        Objects.equals(this.marketName, boostMarketDetails.marketName) &&
        Objects.equals(this.selectionName, boostMarketDetails.selectionName) &&
        Objects.equals(this.specialOddsValue, boostMarketDetails.specialOddsValue) &&
        Objects.equals(this.selectionId, boostMarketDetails.selectionId) &&
        Objects.equals(this.ladderTypeId, boostMarketDetails.ladderTypeId) &&
        Objects.equals(this.marketTypeId, boostMarketDetails.marketTypeId) &&
        Objects.equals(this.selectionTypeId, boostMarketDetails.selectionTypeId) &&
        Objects.equals(this.brandPriceMongo, boostMarketDetails.brandPriceMongo) &&
        Objects.equals(this.boostPriceMongo, boostMarketDetails.boostPriceMongo) &&
        Objects.equals(this.boostItemId, boostMarketDetails.boostItemId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(fmConfigId, marketTypeName, selectionTypeName, marketName, selectionName, specialOddsValue, selectionId, ladderTypeId, marketTypeId, selectionTypeId, brandPriceMongo, boostPriceMongo, boostItemId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BoostMarketDetails {\n");
    sb.append("    fmConfigId: ").append(toIndentedString(fmConfigId)).append("\n");
    sb.append("    marketTypeName: ").append(toIndentedString(marketTypeName)).append("\n");
    sb.append("    selectionTypeName: ").append(toIndentedString(selectionTypeName)).append("\n");
    sb.append("    marketName: ").append(toIndentedString(marketName)).append("\n");
    sb.append("    selectionName: ").append(toIndentedString(selectionName)).append("\n");
    sb.append("    specialOddsValue: ").append(toIndentedString(specialOddsValue)).append("\n");
    sb.append("    selectionId: ").append(toIndentedString(selectionId)).append("\n");
    sb.append("    ladderTypeId: ").append(toIndentedString(ladderTypeId)).append("\n");
    sb.append("    marketTypeId: ").append(toIndentedString(marketTypeId)).append("\n");
    sb.append("    selectionTypeId: ").append(toIndentedString(selectionTypeId)).append("\n");
    sb.append("    brandPriceMongo: ").append(toIndentedString(brandPriceMongo)).append("\n");
    sb.append("    boostPriceMongo: ").append(toIndentedString(boostPriceMongo)).append("\n");
    sb.append("    boostItemId: ").append(toIndentedString(boostItemId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("FMConfigId");
    openapiFields.add("MarketTypeName");
    openapiFields.add("SelectionTypeName");
    openapiFields.add("MarketName");
    openapiFields.add("SelectionName");
    openapiFields.add("SpecialOddsValue");
    openapiFields.add("SelectionId");
    openapiFields.add("LadderTypeId");
    openapiFields.add("MarketTypeId");
    openapiFields.add("SelectionTypeId");
    openapiFields.add("BrandPriceMongo");
    openapiFields.add("BoostPriceMongo");
    openapiFields.add("BoostItemId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to BoostMarketDetails
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BoostMarketDetails.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BoostMarketDetails is not found in the empty JSON string", BoostMarketDetails.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BoostMarketDetails.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BoostMarketDetails` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("MarketTypeName") != null && !jsonObj.get("MarketTypeName").isJsonNull()) && !jsonObj.get("MarketTypeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MarketTypeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MarketTypeName").toString()));
      }
      if ((jsonObj.get("SelectionTypeName") != null && !jsonObj.get("SelectionTypeName").isJsonNull()) && !jsonObj.get("SelectionTypeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SelectionTypeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SelectionTypeName").toString()));
      }
      if ((jsonObj.get("MarketName") != null && !jsonObj.get("MarketName").isJsonNull()) && !jsonObj.get("MarketName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MarketName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MarketName").toString()));
      }
      if ((jsonObj.get("SelectionName") != null && !jsonObj.get("SelectionName").isJsonNull()) && !jsonObj.get("SelectionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SelectionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SelectionName").toString()));
      }
      if ((jsonObj.get("SpecialOddsValue") != null && !jsonObj.get("SpecialOddsValue").isJsonNull()) && !jsonObj.get("SpecialOddsValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `SpecialOddsValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("SpecialOddsValue").toString()));
      }
      // validate the optional field `LadderTypeId`
      if (jsonObj.get("LadderTypeId") != null && !jsonObj.get("LadderTypeId").isJsonNull()) {
        LadderTypes.validateJsonElement(jsonObj.get("LadderTypeId"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BoostMarketDetails.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BoostMarketDetails' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BoostMarketDetails> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BoostMarketDetails.class));

       return (TypeAdapter<T>) new TypeAdapter<BoostMarketDetails>() {
           @Override
           public void write(JsonWriter out, BoostMarketDetails value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BoostMarketDetails read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BoostMarketDetails given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BoostMarketDetails
  * @throws IOException if the JSON string is invalid with respect to BoostMarketDetails
  */
  public static BoostMarketDetails fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BoostMarketDetails.class);
  }

 /**
  * Convert an instance of BoostMarketDetails to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

