/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.*;

/**
 * BonusAccountItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class BonusAccountItem {
  public static final String SERIALIZED_NAME_BONUS_CAMPAIGN_NAME = "BonusCampaignName";
  @SerializedName(SERIALIZED_NAME_BONUS_CAMPAIGN_NAME)
  private String bonusCampaignName;

  public static final String SERIALIZED_NAME_BONUS_TYPE_NAME = "BonusTypeName";
  @SerializedName(SERIALIZED_NAME_BONUS_TYPE_NAME)
  private String bonusTypeName;

  public static final String SERIALIZED_NAME_START_DATE = "StartDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "EndDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_BONUS_STATUS_NAME = "BonusStatusName";
  @SerializedName(SERIALIZED_NAME_BONUS_STATUS_NAME)
  private String bonusStatusName;

  public static final String SERIALIZED_NAME_END_DATE_STATUS = "EndDateStatus";
  @SerializedName(SERIALIZED_NAME_END_DATE_STATUS)
  private String endDateStatus;

  public static final String SERIALIZED_NAME_CURRENCY_TEXT = "CurrencyText";
  @SerializedName(SERIALIZED_NAME_CURRENCY_TEXT)
  private String currencyText;

  public static final String SERIALIZED_NAME_BONUS_AMOUNT = "BonusAmount";
  @SerializedName(SERIALIZED_NAME_BONUS_AMOUNT)
  private Double bonusAmount;

  public static final String SERIALIZED_NAME_BONUS_CAMPAIGN_ID = "BonusCampaignId";
  @SerializedName(SERIALIZED_NAME_BONUS_CAMPAIGN_ID)
  private Integer bonusCampaignId;

  public BonusAccountItem() {
  }

  public BonusAccountItem bonusCampaignName(String bonusCampaignName) {
    this.bonusCampaignName = bonusCampaignName;
    return this;
  }

   /**
   * Get bonusCampaignName
   * @return bonusCampaignName
  **/
  @javax.annotation.Nullable
  public String getBonusCampaignName() {
    return bonusCampaignName;
  }

  public void setBonusCampaignName(String bonusCampaignName) {
    this.bonusCampaignName = bonusCampaignName;
  }


  public BonusAccountItem bonusTypeName(String bonusTypeName) {
    this.bonusTypeName = bonusTypeName;
    return this;
  }

   /**
   * Get bonusTypeName
   * @return bonusTypeName
  **/
  @javax.annotation.Nullable
  public String getBonusTypeName() {
    return bonusTypeName;
  }

  public void setBonusTypeName(String bonusTypeName) {
    this.bonusTypeName = bonusTypeName;
  }


  public BonusAccountItem startDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public BonusAccountItem endDate(OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public BonusAccountItem bonusStatusName(String bonusStatusName) {
    this.bonusStatusName = bonusStatusName;
    return this;
  }

   /**
   * Get bonusStatusName
   * @return bonusStatusName
  **/
  @javax.annotation.Nullable
  public String getBonusStatusName() {
    return bonusStatusName;
  }

  public void setBonusStatusName(String bonusStatusName) {
    this.bonusStatusName = bonusStatusName;
  }


  public BonusAccountItem endDateStatus(String endDateStatus) {
    this.endDateStatus = endDateStatus;
    return this;
  }

   /**
   * Get endDateStatus
   * @return endDateStatus
  **/
  @javax.annotation.Nullable
  public String getEndDateStatus() {
    return endDateStatus;
  }

  public void setEndDateStatus(String endDateStatus) {
    this.endDateStatus = endDateStatus;
  }


  public BonusAccountItem currencyText(String currencyText) {
    this.currencyText = currencyText;
    return this;
  }

   /**
   * Get currencyText
   * @return currencyText
  **/
  @javax.annotation.Nullable
  public String getCurrencyText() {
    return currencyText;
  }

  public void setCurrencyText(String currencyText) {
    this.currencyText = currencyText;
  }


  public BonusAccountItem bonusAmount(Double bonusAmount) {
    this.bonusAmount = bonusAmount;
    return this;
  }

   /**
   * Get bonusAmount
   * @return bonusAmount
  **/
  @javax.annotation.Nullable
  public Double getBonusAmount() {
    return bonusAmount;
  }

  public void setBonusAmount(Double bonusAmount) {
    this.bonusAmount = bonusAmount;
  }


  public BonusAccountItem bonusCampaignId(Integer bonusCampaignId) {
    this.bonusCampaignId = bonusCampaignId;
    return this;
  }

   /**
   * Get bonusCampaignId
   * @return bonusCampaignId
  **/
  @javax.annotation.Nullable
  public Integer getBonusCampaignId() {
    return bonusCampaignId;
  }

  public void setBonusCampaignId(Integer bonusCampaignId) {
    this.bonusCampaignId = bonusCampaignId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BonusAccountItem bonusAccountItem = (BonusAccountItem) o;
    return Objects.equals(this.bonusCampaignName, bonusAccountItem.bonusCampaignName) &&
        Objects.equals(this.bonusTypeName, bonusAccountItem.bonusTypeName) &&
        Objects.equals(this.startDate, bonusAccountItem.startDate) &&
        Objects.equals(this.endDate, bonusAccountItem.endDate) &&
        Objects.equals(this.bonusStatusName, bonusAccountItem.bonusStatusName) &&
        Objects.equals(this.endDateStatus, bonusAccountItem.endDateStatus) &&
        Objects.equals(this.currencyText, bonusAccountItem.currencyText) &&
        Objects.equals(this.bonusAmount, bonusAccountItem.bonusAmount) &&
        Objects.equals(this.bonusCampaignId, bonusAccountItem.bonusCampaignId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(bonusCampaignName, bonusTypeName, startDate, endDate, bonusStatusName, endDateStatus, currencyText, bonusAmount, bonusCampaignId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BonusAccountItem {\n");
    sb.append("    bonusCampaignName: ").append(toIndentedString(bonusCampaignName)).append("\n");
    sb.append("    bonusTypeName: ").append(toIndentedString(bonusTypeName)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    bonusStatusName: ").append(toIndentedString(bonusStatusName)).append("\n");
    sb.append("    endDateStatus: ").append(toIndentedString(endDateStatus)).append("\n");
    sb.append("    currencyText: ").append(toIndentedString(currencyText)).append("\n");
    sb.append("    bonusAmount: ").append(toIndentedString(bonusAmount)).append("\n");
    sb.append("    bonusCampaignId: ").append(toIndentedString(bonusCampaignId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("BonusCampaignName");
    openapiFields.add("BonusTypeName");
    openapiFields.add("StartDate");
    openapiFields.add("EndDate");
    openapiFields.add("BonusStatusName");
    openapiFields.add("EndDateStatus");
    openapiFields.add("CurrencyText");
    openapiFields.add("BonusAmount");
    openapiFields.add("BonusCampaignId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to BonusAccountItem
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!BonusAccountItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in BonusAccountItem is not found in the empty JSON string", BonusAccountItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!BonusAccountItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `BonusAccountItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("BonusCampaignName") != null && !jsonObj.get("BonusCampaignName").isJsonNull()) && !jsonObj.get("BonusCampaignName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BonusCampaignName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BonusCampaignName").toString()));
      }
      if ((jsonObj.get("BonusTypeName") != null && !jsonObj.get("BonusTypeName").isJsonNull()) && !jsonObj.get("BonusTypeName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BonusTypeName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BonusTypeName").toString()));
      }
      if ((jsonObj.get("BonusStatusName") != null && !jsonObj.get("BonusStatusName").isJsonNull()) && !jsonObj.get("BonusStatusName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BonusStatusName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BonusStatusName").toString()));
      }
      if ((jsonObj.get("EndDateStatus") != null && !jsonObj.get("EndDateStatus").isJsonNull()) && !jsonObj.get("EndDateStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EndDateStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EndDateStatus").toString()));
      }
      if ((jsonObj.get("CurrencyText") != null && !jsonObj.get("CurrencyText").isJsonNull()) && !jsonObj.get("CurrencyText").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CurrencyText` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CurrencyText").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!BonusAccountItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'BonusAccountItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<BonusAccountItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(BonusAccountItem.class));

       return (TypeAdapter<T>) new TypeAdapter<BonusAccountItem>() {
           @Override
           public void write(JsonWriter out, BonusAccountItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public BonusAccountItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of BonusAccountItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of BonusAccountItem
  * @throws IOException if the JSON string is invalid with respect to BonusAccountItem
  */
  public static BonusAccountItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, BonusAccountItem.class);
  }

 /**
  * Convert an instance of BonusAccountItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

