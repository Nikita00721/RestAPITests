/*
 * Backoffice.Api
 * Backoffice.Api
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package BackofficeGenerator.model;

import BackofficeGenerator.JSON;
import com.google.gson.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.reflect.TypeToken;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import org.openapitools.jackson.nullable.JsonNullable;

import java.io.IOException;
import java.util.*;

/**
 * AamsSelectionWithRequiredAction
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-03-26T23:02:24.556418400+03:00[Europe/Moscow]")
public class AamsSelectionWithRequiredAction {
  public static final String SERIALIZED_NAME_OPERATOR_ID = "OperatorId";
  @SerializedName(SERIALIZED_NAME_OPERATOR_ID)
  private Integer operatorId;

  public static final String SERIALIZED_NAME_OPERATOR_NAME = "OperatorName";
  @SerializedName(SERIALIZED_NAME_OPERATOR_NAME)
  private String operatorName;

  public static final String SERIALIZED_NAME_INT_EVENT_ID = "IntEventId";
  @SerializedName(SERIALIZED_NAME_INT_EVENT_ID)
  private Long intEventId;

  public static final String SERIALIZED_NAME_EVENT_NAME = "EventName";
  @SerializedName(SERIALIZED_NAME_EVENT_NAME)
  private String eventName;

  public static final String SERIALIZED_NAME_PROCESSED_STATUS = "ProcessedStatus";
  @SerializedName(SERIALIZED_NAME_PROCESSED_STATUS)
  private String processedStatus;

  public static final String SERIALIZED_NAME_FEED_MARKET_ID = "FeedMarketId";
  @SerializedName(SERIALIZED_NAME_FEED_MARKET_ID)
  private Long feedMarketId;

  public static final String SERIALIZED_NAME_FEED_MARKET_NAME = "FeedMarketName";
  @SerializedName(SERIALIZED_NAME_FEED_MARKET_NAME)
  private String feedMarketName;

  public static final String SERIALIZED_NAME_FEED_SELECTION_ID = "FeedSelectionId";
  @SerializedName(SERIALIZED_NAME_FEED_SELECTION_ID)
  private Long feedSelectionId;

  public static final String SERIALIZED_NAME_FEED_SELECTION_NAME = "FeedSelectionName";
  @SerializedName(SERIALIZED_NAME_FEED_SELECTION_NAME)
  private String feedSelectionName;

  public static final String SERIALIZED_NAME_INT_BET_ID = "IntBetId";
  @SerializedName(SERIALIZED_NAME_INT_BET_ID)
  private Long intBetId;

  public AamsSelectionWithRequiredAction() {
  }

  public AamsSelectionWithRequiredAction operatorId(Integer operatorId) {
    this.operatorId = operatorId;
    return this;
  }

   /**
   * Get operatorId
   * @return operatorId
  **/
  @javax.annotation.Nullable
  public Integer getOperatorId() {
    return operatorId;
  }

  public void setOperatorId(Integer operatorId) {
    this.operatorId = operatorId;
  }


  public AamsSelectionWithRequiredAction operatorName(String operatorName) {
    this.operatorName = operatorName;
    return this;
  }

   /**
   * Get operatorName
   * @return operatorName
  **/
  @javax.annotation.Nullable
  public String getOperatorName() {
    return operatorName;
  }

  public void setOperatorName(String operatorName) {
    this.operatorName = operatorName;
  }


  public AamsSelectionWithRequiredAction intEventId(Long intEventId) {
    this.intEventId = intEventId;
    return this;
  }

   /**
   * Get intEventId
   * @return intEventId
  **/
  @javax.annotation.Nullable
  public Long getIntEventId() {
    return intEventId;
  }

  public void setIntEventId(Long intEventId) {
    this.intEventId = intEventId;
  }


  public AamsSelectionWithRequiredAction eventName(String eventName) {
    this.eventName = eventName;
    return this;
  }

   /**
   * Get eventName
   * @return eventName
  **/
  @javax.annotation.Nullable
  public String getEventName() {
    return eventName;
  }

  public void setEventName(String eventName) {
    this.eventName = eventName;
  }


  public AamsSelectionWithRequiredAction processedStatus(String processedStatus) {
    this.processedStatus = processedStatus;
    return this;
  }

   /**
   * Get processedStatus
   * @return processedStatus
  **/
  @javax.annotation.Nullable
  public String getProcessedStatus() {
    return processedStatus;
  }

  public void setProcessedStatus(String processedStatus) {
    this.processedStatus = processedStatus;
  }


  public AamsSelectionWithRequiredAction feedMarketId(Long feedMarketId) {
    this.feedMarketId = feedMarketId;
    return this;
  }

   /**
   * Get feedMarketId
   * @return feedMarketId
  **/
  @javax.annotation.Nullable
  public Long getFeedMarketId() {
    return feedMarketId;
  }

  public void setFeedMarketId(Long feedMarketId) {
    this.feedMarketId = feedMarketId;
  }


  public AamsSelectionWithRequiredAction feedMarketName(String feedMarketName) {
    this.feedMarketName = feedMarketName;
    return this;
  }

   /**
   * Get feedMarketName
   * @return feedMarketName
  **/
  @javax.annotation.Nullable
  public String getFeedMarketName() {
    return feedMarketName;
  }

  public void setFeedMarketName(String feedMarketName) {
    this.feedMarketName = feedMarketName;
  }


  public AamsSelectionWithRequiredAction feedSelectionId(Long feedSelectionId) {
    this.feedSelectionId = feedSelectionId;
    return this;
  }

   /**
   * Get feedSelectionId
   * @return feedSelectionId
  **/
  @javax.annotation.Nullable
  public Long getFeedSelectionId() {
    return feedSelectionId;
  }

  public void setFeedSelectionId(Long feedSelectionId) {
    this.feedSelectionId = feedSelectionId;
  }


  public AamsSelectionWithRequiredAction feedSelectionName(String feedSelectionName) {
    this.feedSelectionName = feedSelectionName;
    return this;
  }

   /**
   * Get feedSelectionName
   * @return feedSelectionName
  **/
  @javax.annotation.Nullable
  public String getFeedSelectionName() {
    return feedSelectionName;
  }

  public void setFeedSelectionName(String feedSelectionName) {
    this.feedSelectionName = feedSelectionName;
  }


  public AamsSelectionWithRequiredAction intBetId(Long intBetId) {
    this.intBetId = intBetId;
    return this;
  }

   /**
   * Get intBetId
   * @return intBetId
  **/
  @javax.annotation.Nullable
  public Long getIntBetId() {
    return intBetId;
  }

  public void setIntBetId(Long intBetId) {
    this.intBetId = intBetId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AamsSelectionWithRequiredAction aamsSelectionWithRequiredAction = (AamsSelectionWithRequiredAction) o;
    return Objects.equals(this.operatorId, aamsSelectionWithRequiredAction.operatorId) &&
        Objects.equals(this.operatorName, aamsSelectionWithRequiredAction.operatorName) &&
        Objects.equals(this.intEventId, aamsSelectionWithRequiredAction.intEventId) &&
        Objects.equals(this.eventName, aamsSelectionWithRequiredAction.eventName) &&
        Objects.equals(this.processedStatus, aamsSelectionWithRequiredAction.processedStatus) &&
        Objects.equals(this.feedMarketId, aamsSelectionWithRequiredAction.feedMarketId) &&
        Objects.equals(this.feedMarketName, aamsSelectionWithRequiredAction.feedMarketName) &&
        Objects.equals(this.feedSelectionId, aamsSelectionWithRequiredAction.feedSelectionId) &&
        Objects.equals(this.feedSelectionName, aamsSelectionWithRequiredAction.feedSelectionName) &&
        Objects.equals(this.intBetId, aamsSelectionWithRequiredAction.intBetId);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(operatorId, operatorName, intEventId, eventName, processedStatus, feedMarketId, feedMarketName, feedSelectionId, feedSelectionName, intBetId);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AamsSelectionWithRequiredAction {\n");
    sb.append("    operatorId: ").append(toIndentedString(operatorId)).append("\n");
    sb.append("    operatorName: ").append(toIndentedString(operatorName)).append("\n");
    sb.append("    intEventId: ").append(toIndentedString(intEventId)).append("\n");
    sb.append("    eventName: ").append(toIndentedString(eventName)).append("\n");
    sb.append("    processedStatus: ").append(toIndentedString(processedStatus)).append("\n");
    sb.append("    feedMarketId: ").append(toIndentedString(feedMarketId)).append("\n");
    sb.append("    feedMarketName: ").append(toIndentedString(feedMarketName)).append("\n");
    sb.append("    feedSelectionId: ").append(toIndentedString(feedSelectionId)).append("\n");
    sb.append("    feedSelectionName: ").append(toIndentedString(feedSelectionName)).append("\n");
    sb.append("    intBetId: ").append(toIndentedString(intBetId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("OperatorId");
    openapiFields.add("OperatorName");
    openapiFields.add("IntEventId");
    openapiFields.add("EventName");
    openapiFields.add("ProcessedStatus");
    openapiFields.add("FeedMarketId");
    openapiFields.add("FeedMarketName");
    openapiFields.add("FeedSelectionId");
    openapiFields.add("FeedSelectionName");
    openapiFields.add("IntBetId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Element and throws an exception if issues found
  *
  * @param jsonElement JSON Element
  * @throws IOException if the JSON Element is invalid with respect to AamsSelectionWithRequiredAction
  */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AamsSelectionWithRequiredAction.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AamsSelectionWithRequiredAction is not found in the empty JSON string", AamsSelectionWithRequiredAction.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AamsSelectionWithRequiredAction.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AamsSelectionWithRequiredAction` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("OperatorName") != null && !jsonObj.get("OperatorName").isJsonNull()) && !jsonObj.get("OperatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `OperatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("OperatorName").toString()));
      }
      if ((jsonObj.get("EventName") != null && !jsonObj.get("EventName").isJsonNull()) && !jsonObj.get("EventName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `EventName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("EventName").toString()));
      }
      if ((jsonObj.get("ProcessedStatus") != null && !jsonObj.get("ProcessedStatus").isJsonNull()) && !jsonObj.get("ProcessedStatus").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ProcessedStatus` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ProcessedStatus").toString()));
      }
      if ((jsonObj.get("FeedMarketName") != null && !jsonObj.get("FeedMarketName").isJsonNull()) && !jsonObj.get("FeedMarketName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FeedMarketName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FeedMarketName").toString()));
      }
      if ((jsonObj.get("FeedSelectionName") != null && !jsonObj.get("FeedSelectionName").isJsonNull()) && !jsonObj.get("FeedSelectionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `FeedSelectionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("FeedSelectionName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AamsSelectionWithRequiredAction.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AamsSelectionWithRequiredAction' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AamsSelectionWithRequiredAction> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AamsSelectionWithRequiredAction.class));

       return (TypeAdapter<T>) new TypeAdapter<AamsSelectionWithRequiredAction>() {
           @Override
           public void write(JsonWriter out, AamsSelectionWithRequiredAction value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AamsSelectionWithRequiredAction read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AamsSelectionWithRequiredAction given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AamsSelectionWithRequiredAction
  * @throws IOException if the JSON string is invalid with respect to AamsSelectionWithRequiredAction
  */
  public static AamsSelectionWithRequiredAction fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AamsSelectionWithRequiredAction.class);
  }

 /**
  * Convert an instance of AamsSelectionWithRequiredAction to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

